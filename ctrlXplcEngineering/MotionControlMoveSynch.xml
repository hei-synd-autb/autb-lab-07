<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="Rexroth" productName="ctrlX PLC Engineering" productVersion="ctrlX PLC 1.12.3" creationDateTime="2023-10-19T14:02:44.6540621" />
  <contentHeader name="MotionControlMoveSynch.project" modificationDateTime="2023-10-19T14:02:09.5567788">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation />
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes />
    <pous />
  </types>
  <instances>
    <configurations>
      <configuration name="Device">
        <resource name="MotionCyclic">
          <task name="MainTask" interval="PT0.02S" priority="30">
            <pouInstance name="PLC_PRG" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="t#20ms" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>c415bedf-0f09-44b9-bf64-bfdfe9bdba5d</ObjectId>
              </data>
            </addData>
          </task>
          <task name="MainTaskMotif" interval="PT0.02S" priority="30">
            <pouInstance name="AxisKinIfPlcProg" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="DemoBufferedAxisCommands" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="DemoKinematicsCommands" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="DemoAxisCommands" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="t#20ms" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>be22be8d-a3eb-40f8-83ca-81c24403a32d</ObjectId>
              </data>
            </addData>
          </task>
          <task name="MotionTask_2ms" priority="29">
            <pouInstance name="AxisKinIfMotionProg" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="PRG_CyclicSetPoint" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="ExternalEvent" Interval="t#2ms" ExternalEvent="TASK_EXTERNAL_EVENT_07" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" Time="T#50ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>faa4e80b-0771-456a-b43e-b3737ff8242b</ObjectId>
              </data>
            </addData>
          </task>
          <globalVars name="GlobalAxisDefines" constant="true">
            <variable name="X_Axis">
              <type>
                <derived name="MB_AXISIF_REF" />
              </type>
              <initialValue>
                <structValue>
                  <value member="AxisName">
                    <simpleValue value="'Axis_X'" />
                  </value>
                  <value member="AxisNo">
                    <simpleValue value="1" />
                  </value>
                </structValue>
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Note: Set MOTIF_CONFIG.CONFIG_MODE_AXS to TE_AXIS_IDX_CONFIG_MODE.GLOB_VAR to use this list
 You can find the parameterlist MOTIF_CONFIG in the library CXA_MotionInterfaceUser
 Step 1: Define your Axis-Refs. These defines can be used for PLCopen FBs and also for accessing the AxisInterface 
 Example PLCopen: "fbReadParameter( Execute:= ,	Axis:= vAxis1);"
 Example Axis-Interface: "arAxisCtrl_gb[vAxis1.AxisNo].Admin._OpMode := ModeAb;" 
 Notes: AxisName has to match the name defined in motion configuration. AxisNo has to be unique in range defined in MOTIF_CONFIG. 
  vAxis1: MB_AXISIF_REF :=(AxisName:='vAxis1',AxisNo:=4);   // define "vAxis1" with axis index 4.  </xhtml>
              </documentation>
            </variable>
            <variable name="Y_Axis">
              <type>
                <derived name="MB_AXISIF_REF" />
              </type>
              <initialValue>
                <structValue>
                  <value member="AxisName">
                    <simpleValue value="'Axis_Y'" />
                  </value>
                  <value member="AxisNo">
                    <simpleValue value="2" />
                  </value>
                </structValue>
              </initialValue>
            </variable>
            <variable name="Z_Axis">
              <type>
                <derived name="MB_AXISIF_REF" />
              </type>
              <initialValue>
                <structValue>
                  <value member="AxisName">
                    <simpleValue value="'Axis_Z'" />
                  </value>
                  <value member="AxisNo">
                    <simpleValue value="3" />
                  </value>
                </structValue>
              </initialValue>
            </variable>
            <variable name="AXIF_CONFIG_INDEXES">
              <type>
                <array>
                  <dimension lower="MOTIF_CONFIG.MIN_AXIS_INDEX" upper="MOTIF_CONFIG.MAX_AXIS_INDEX" />
                  <baseType>
                    <derived name="MB_AXISIF_REF" />
                  </baseType>
                </array>
              </type>
              <initialValue>
                <arrayValue>
                  <value>
                    <simpleValue value="X_Axis" />
                  </value>
                  <value>
                    <simpleValue value="Y_Axis" />
                  </value>
                  <value>
                    <simpleValue value="Z_Axis" />
                  </value>
                </arrayValue>
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Step 2: Add the above declared Axis-Refs into this list, that is forwarded to TE_AxisInterfaceMainProg(). The order does not matter. 
  AXIF_CONFIG_INDEXES: ARRAY [MOTIF_CONFIG.MIN_AXIS_INDEX..MOTIF_CONFIG.MAX_AXIS_INDEX] OF MB_AXISIF_REF := [vAxis1,X_Axis,Y_Axis,Z_Axis,MoverX,MoverY,MoverZ];</xhtml>
              </documentation>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>ab70bda9-e364-4244-8eec-6c395de578c2</ObjectId>
              </data>
            </addData>
          </globalVars>
          <globalVars name="GlobalKinematicsDefines" constant="true">
            <variable name="Kin1">
              <type>
                <derived name="MB_AXESGROUPIF_REF" />
              </type>
              <initialValue>
                <structValue>
                  <value member="KinName">
                    <simpleValue value="'KinematicsOne'" />
                  </value>
                  <value member="GroupNo">
                    <simpleValue value="1" />
                  </value>
                </structValue>
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> define "Kin1" with kinematics index 1.  </xhtml>
              </documentation>
            </variable>
            <variable name="KINIF_CONFIG_INDEXES">
              <type>
                <array>
                  <dimension lower="MB_KINIF_MIN_KIN_INDEX" upper="MOTIF_CONFIG.MAX_KIN_INDEX" />
                  <baseType>
                    <derived name="MB_AXESGROUPIF_REF" />
                  </baseType>
                </array>
              </type>
              <initialValue>
                <arrayValue>
                  <value>
                    <simpleValue value="Kin1" />
                  </value>
                </arrayValue>
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">  Mover: MB_AXESGROUPIF_REF :=(KinName:='Mover',GroupNo:=3); // define "Mover" with kinematics index 3.  
 Step 2: Add the above declared Group-Refs into this list, that is forwarded to TE_KinInterfaceMainProg(). The order does not matter. 
  KINIF_CONFIG_INDEXES: ARRAY [MB_KINIF_MIN_KIN_INDEX..MOTIF_CONFIG.MAX_KIN_INDEX] OF MB_AXESGROUPIF_REF := [Kin1,Mover];</xhtml>
              </documentation>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>75ee247b-37cf-45b2-a30d-83a68382c334</ObjectId>
              </data>
            </addData>
          </globalVars>
          <globalVars name="GVL_CyclSetPoint">
            <variable name="stRemote">
              <type>
                <derived name="ST_RemoteCyclicSetPosition" />
              </type>
              <initialValue>
                <structValue>
                  <value member="in">
                    <structValue>
                      <value member="bEndPosition">
                        <simpleValue value="5" />
                      </value>
                    </structValue>
                  </value>
                </structValue>
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Remote for this program</xhtml>
              </documentation>
            </variable>
            <variable name="arGoToPosition">
              <type>
                <array>
                  <dimension lower="0" upper="c_uiMaxProfilePoints" />
                  <baseType>
                    <LREAL />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> These values are for check only, it is possible to work without buffer</xhtml>
              </documentation>
            </variable>
            <variable name="arReturnFromPosition">
              <type>
                <array>
                  <dimension lower="0" upper="c_uiMaxProfilePoints" />
                  <baseType>
                    <LREAL />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="c_uiMaxProfilePoints">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 1001 points of 2 ms for max 2 [s] motion</xhtml>
              </documentation>
            </variable>
            <variable name="P5">
              <type>
                <array>
                  <dimension lower="1" upper="6" />
                  <baseType>
                    <LREAL />
                  </baseType>
                </array>
              </type>
              <initialValue>
                <arrayValue>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="10" />
                  </value>
                  <value>
                    <simpleValue value="-15" />
                  </value>
                  <value>
                    <simpleValue value="6" />
                  </value>
                </arrayValue>
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> P5 Polynomial P5(0) to P5(5) exp 0 to 5</xhtml>
              </documentation>
            </variable>
            <variable name="MOTION_CYCLE_TIME_ms">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> equal to real time bus</xhtml>
              </documentation>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                <Attributes>
                  <Attribute Name="qualified_only" Value="" />
                </Attributes>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>c785d28d-6e9b-46ff-9791-4bb0daeb847a</ObjectId>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/mixedattrsvarlist" handleUnknown="implementation">
                <MixedAttrsVarList>
                  <globalVars name="GVL_CyclSetPoint">
                    <variable name="stRemote">
                      <type>
                        <derived name="ST_RemoteCyclicSetPosition" />
                      </type>
                      <initialValue>
                        <structValue>
                          <value member="in">
                            <structValue>
                              <value member="bEndPosition">
                                <simpleValue value="5" />
                              </value>
                            </structValue>
                          </value>
                        </structValue>
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Remote for this program</xhtml>
                      </documentation>
                    </variable>
                    <variable name="arGoToPosition">
                      <type>
                        <array>
                          <dimension lower="0" upper="c_uiMaxProfilePoints" />
                          <baseType>
                            <LREAL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> These values are for check only, it is possible to work without buffer</xhtml>
                      </documentation>
                    </variable>
                    <variable name="arReturnFromPosition">
                      <type>
                        <array>
                          <dimension lower="0" upper="c_uiMaxProfilePoints" />
                          <baseType>
                            <LREAL />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                  </globalVars>
                  <globalVars name="GVL_CyclSetPoint" constant="true">
                    <variable name="c_uiMaxProfilePoints">
                      <type>
                        <UDINT />
                      </type>
                      <initialValue>
                        <simpleValue value="1000" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> 1001 points of 2 ms for max 2 [s] motion</xhtml>
                      </documentation>
                    </variable>
                    <variable name="P5">
                      <type>
                        <array>
                          <dimension lower="1" upper="6" />
                          <baseType>
                            <LREAL />
                          </baseType>
                        </array>
                      </type>
                      <initialValue>
                        <arrayValue>
                          <value>
                            <simpleValue value="0" />
                          </value>
                          <value>
                            <simpleValue value="0" />
                          </value>
                          <value>
                            <simpleValue value="0" />
                          </value>
                          <value>
                            <simpleValue value="10" />
                          </value>
                          <value>
                            <simpleValue value="-15" />
                          </value>
                          <value>
                            <simpleValue value="6" />
                          </value>
                        </arrayValue>
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> P5 Polynomial P5(0) to P5(5) exp 0 to 5</xhtml>
                      </documentation>
                    </variable>
                    <variable name="MOTION_CYCLE_TIME_ms">
                      <type>
                        <UDINT />
                      </type>
                      <initialValue>
                        <simpleValue value="2" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> equal to real time bus</xhtml>
                      </documentation>
                    </variable>
                  </globalVars>
                </MixedAttrsVarList>
              </data>
            </addData>
          </globalVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="TE_ARR_COORDS">
                <baseType>
                  <array>
                    <dimension lower="0" upper="(MB_KINIF_NOF_POINT - 1)" />
                    <baseType>
                      <LREAL />
                    </baseType>
                  </array>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>6a0782e6-b12d-455c-aac3-3d194c70fff5</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_PlcOpenFbs">
                <baseType>
                  <struct>
                    <variable name="bEnableRemote">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> If TRUE, the FB are driven manually from the HMI</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bEnableReadStatus">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bEnableReadPosition">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bEnableReadVelocity">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bMoveAbs">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bStop">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bPowerOn">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bReset">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="strGetAxisStatus">
                      <type>
                        <string />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> From arAxisStatus_gb[1].Data.PLCopenState;
 Exist in Data Layer too, s=motion/axs/Axis_X/state/opstate/plcopen</xhtml>
                      </documentation>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>91228204-eb16-473b-8fe0-800c02ac25d9</ObjectId>
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Projet No: PW Move Absolute
	Author:		Cedric Lenoir
	Date:		2023 October 16
	
	Summary:	List of commands for MoveAbsolute
</xhtml>
                </documentation>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_SetMotionParam">
                <baseType>
                  <struct>
                    <variable name="rPosition_mm">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="rVeloctiy_mm_s">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="rAcceleration_mm_s2">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="rDeceleration_m_s2">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="rJerk_m_s3">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>4ebefe34-98e8-4b46-a015-351f1e587d13</ObjectId>
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Projet No: PW Move Absolute
	Author:		Cedric Lenoir
	Date:		2023 October 16
	
	Summary:	List of dynamic parameters for Move Absolute
</xhtml>
                </documentation>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_StateMachineInfo">
                <baseType>
                  <struct>
                    <variable name="diState">
                      <type>
                        <DINT />
                      </type>
                    </variable>
                    <variable name="eState">
                      <type>
                        <derived name="EN_MoveAbsStates" />
                      </type>
                    </variable>
                    <variable name="eStateNm1">
                      <type>
                        <derived name="EN_MoveAbsStates" />
                      </type>
                    </variable>
                    <variable name="eStateMem">
                      <type>
                        <derived name="EN_MoveAbsStates" />
                      </type>
                    </variable>
                    <variable name="bIdle">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bActive">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bError">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="strState">
                      <type>
                        <string />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b0bc352a-3795-4e69-ba2c-5318db5e9d2b</ObjectId>
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Projet No: PW Move Absolute
	Author:		Cedric Lenoir
	Date:		2023 October 16
	
	Summary:	State Machine Info      
</xhtml>
                </documentation>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_RemoteCyclicSetPosition">
                <baseType>
                  <struct>
                    <variable name="in">
                      <type>
                        <derived name="ST_RemoteCyclicSetPositionIn" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Commands for program</xhtml>
                      </documentation>
                    </variable>
                    <variable name="out">
                      <type>
                        <derived name="ST_RemoteCyclicSetPositionOut" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Status for program    </xhtml>
                      </documentation>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>8a3cf65a-db13-4abf-b4e5-ed6c70bc741b</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_RemoteCyclicSetPositionIn">
                <baseType>
                  <struct>
                    <variable name="bInit">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Init axis position with Move Absolute</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bStop">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Stop Absolute motion      </xhtml>
                      </documentation>
                    </variable>
                    <variable name="bInitPosition">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Set init position / Start of profile position</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bEndPosition">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Set end position / End of profile position</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bActivateCoupling">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Activate coupling, when TRUE, axis position is set by fbGenerateProfile
 with 5th order polynomial</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bStartForward">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Start polynomial profile forward</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bStartBackward">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Start polynomial profile backward</xhtml>
                      </documentation>
                    </variable>
                    <variable name="lrProfileSetPosition">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Set Position from Profile generator</xhtml>
                      </documentation>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>7950c277-c170-4290-bc58-d2a229681bd5</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_RemoteCyclicSetPositionOut">
                <baseType>
                  <struct>
                    <variable name="bInitDone">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Init done, ready for cyclic motion    </xhtml>
                      </documentation>
                    </variable>
                    <variable name="bError">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> There is an error</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bFwdDone">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> End of cyclic profile Forward</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bBackDone">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> End of cyclic profile Back</xhtml>
                      </documentation>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>075fe29f-e565-4245-8621-a8fc32c2cd08</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="AxisKinIfMotionProg" pouType="program">
                <interface>
                  <localVars>
                    <variable name="i">
                      <type>
                        <INT />
                      </type>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">{info 'Set the watchdog of the MotionTask to e.g. T#2ms when not using a ctrlX COREvirtual. You can remove this info after your decision'}
i:=i+1;
//################
TE_AxisInterfaceMainProg.mMotionTask();  // call the AXIF FB with higher Prio
//################
//################
TE_KinInterfaceMainProg.mMotionTask();  // call the KINIF FB with higher Prio
//################
</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>5e5ed0bc-429d-46b6-9540-ae2afc37da4b</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="AxisKinIfPlcProg" pouType="program">
                <interface />
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">TE_AxisInterfaceMainProg( AxisCfgIdx:= ADR(AXIF_CONFIG_INDEXES) ); // call Axis-Interface. Do this only once in your system. 
IF NOT TE_AxisInterfaceMainProg.InitDone OR TE_AxisInterfaceMainProg.Error THEN
  RETURN; // do not continue, when Motion is not in RUN or initialization failed.
END_IF
TE_KinInterfaceMainProg( KinCfgIdx:= ADR(KINIF_CONFIG_INDEXES) ); // call Kin-Interface. Do this only once in your system. 
IF NOT TE_KinInterfaceMainProg.InitDone OR TE_KinInterfaceMainProg.Error  THEN
  RETURN; // do not continue, when Motion is not in RUN or initialization failed.
END_IF
</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b7b6d660-1e12-4fa7-8343-42649de2adc2</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="DemoAxisCommands" pouType="program">
                <interface>
                  <localVars>
                    <variable name="bEnable">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="uiAxisIndex">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="MOTIF_CONFIG.MIN_AXIS_INDEX" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> use the 1st axis as default for demo</xhtml>
                      </documentation>
                    </variable>
                    <variable name="lrActPos">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="bStopAll">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">//------------------------------------------------------------------------------------------------------
//----------------------------- Example for axis-access with AxisInterface ------------------------------
//------------------------------------------------------------------------------------------------------
IF NOT TE_AxisInterfaceMainProg.InitDone OR TE_AxisInterfaceMainProg.Error THEN
  RETURN; // do not continue, when Motion is not in RUN or initialization failed.
END_IF

IF bRemoteOn_gb = FALSE THEN
  //------------------------------
  // Axis-Command: position to 42° with bEnable = TRUE
  //------------------------------
  arAxisCtrl_gb[uiAxisIndex].PosMode.Position := 42.0;
  arAxisCtrl_gb[uiAxisIndex].PosMode.Velocity := 11;
  arAxisCtrl_gb[uiAxisIndex].Admin._OpModeBits.MODE_POS_ABS := bEnable;
  // Alternative with AXIS_REF
  //arAxisCtrl_gb[vAxis1.AxisNo].Admin._OpModeBits.MODE_POS_ABS := bEnable;

  //------------------------------
  // Axis-Command: Switch all axes to ModeAH with bStopAll = TRUE
  //------------------------------
  IF bStopAll = TRUE THEN
    FOR i := MOTIF_CONFIG.MIN_AXIS_INDEX TO MOTIF_CONFIG.MAX_AXIS_INDEX DO
      IF arAxisStatus_gb[i].Admin.Active THEN
        arAxisCtrl_gb[i].Admin._OpMode := ModeAH;
      END_IF
    END_FOR
  ELSE
    // set to Mode Ab when bStop All = FALSE
    FOR i := MOTIF_CONFIG.MIN_AXIS_INDEX TO MOTIF_CONFIG.MAX_AXIS_INDEX DO
      IF arAxisStatus_gb[i].Admin.Active AND arAxisStatus_gb[i].Admin._OpModeAckBits.MODE_AH  THEN
        arAxisCtrl_gb[i].Admin._OpMode := ModeAb;
      END_IF
    END_FOR
  END_IF

END_IF
//---------------------------------
// Axis-Status: just some dummy ...
//---------------------------------
IF ( arAxisStatus_gb[uiAxisIndex].Admin._OpModeAckBits.MODE_POS_ABS AND
     arAxisStatus_gb[uiAxisIndex].Admin.CmdDone                         )
THEN
  lrActPos := arAxisStatus_gb[uiAxisIndex].Data.ActualPosition;
END_IF
//---------------------------------
// TE_GetAxisInterfaceIndex: get the index of the axis "X_Axis"
//---------------------------------
// i:=TE_GetAxisInterfaceIndex('X_Axis');
</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9b101493-9b75-4ed7-a34b-dccbb5cacdc8</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="DemoBufferedAxisCommands" pouType="program">
                <interface>
                  <localVars>
                    <variable name="uiState">
                      <type>
                        <UINT />
                      </type>
                    </variable>
                    <variable name="uiAxisIndex">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="MOTIF_CONFIG.MIN_AXIS_INDEX" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> use the 1st axis as default for demo </xhtml>
                      </documentation>
                    </variable>
                    <variable name="uiMyOwnId">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="42" />
                      </initialValue>
                    </variable>
                    <variable name="aruliReturnedCmdId">
                      <type>
                        <array>
                          <dimension lower="0" upper="8" />
                          <baseType>
                            <ULINT />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="udiLoopCounter">
                      <type>
                        <UDINT />
                      </type>
                    </variable>
                    <variable name="bRunInLoop">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="FALSE" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT TE_AxisInterfaceMainProg.InitDone OR TE_AxisInterfaceMainProg.Error THEN
  RETURN; // do not continue, when Motion is not in RUN or initialization failed.
END_IF

CASE uiState OF
  1: // switch to AH
     arAxisCtrl_gb[uiAxisIndex].Admin._OpModeBits.MODE_AH := TRUE;
     IF arAxisStatus_gb[uiAxisIndex].Admin.CmdDone THEN
       uiState := uiState + 1;
		 END_IF
  
  2: // go to home position 0 with move absolute 
     arAxisCtrl_gb[uiAxisIndex].PosMode.Position := 0;
     arAxisCtrl_gb[uiAxisIndex].PosMode.Velocity := 100;
     arAxisCtrl_gb[uiAxisIndex].PosMode.DynValues.Acceleration := 500;
     arAxisCtrl_gb[uiAxisIndex].PosMode.DynValues.Deceleration := 500;
     arAxisCtrl_gb[uiAxisIndex].Admin._OpModeBits.MODE_POS_ABS := TRUE;
     IF arAxisStatus_gb[uiAxisIndex].Admin.CmdDone THEN
       uiState := uiState + 1;
		 END_IF
     
  3: // move absolute - send three commands in one cycle 
     arAxisCtrl_gb[uiAxisIndex].PosMode.Position := 30;
     arAxisCtrl_gb[uiAxisIndex].PosMode.Velocity := 10;
     aruliReturnedCmdId[0] := arAxisCtrl_gb[uiAxisIndex].Admin.mTriggerMoveCmd(_OpMode:= ModePosAbs, Buffered:=TRUE, UserID:=CONCAT('my own id ', TO_STRING(uiMyOwnId)) );
     uiMyOwnId := uiMyOwnId + 1; 
     arAxisCtrl_gb[uiAxisIndex].PosMode.Position := -30;
     arAxisCtrl_gb[uiAxisIndex].PosMode.Velocity := 20;
     aruliReturnedCmdId[1] := arAxisCtrl_gb[uiAxisIndex].Admin.mTriggerMoveCmd(_OpMode:= ModePosAbs, Buffered:=TRUE, UserID:=CONCAT('my own id ', TO_STRING(uiMyOwnId)) ); 
     uiMyOwnId := uiMyOwnId + 1; 
     arAxisCtrl_gb[uiAxisIndex].PosMode.Position := 60;
     arAxisCtrl_gb[uiAxisIndex].PosMode.Velocity := 30;
     aruliReturnedCmdId[2] := arAxisCtrl_gb[uiAxisIndex].Admin.mTriggerMoveCmd(_OpMode:= ModePosAbs, Buffered:=TRUE, UserID:=CONCAT('my own id ', TO_STRING(uiMyOwnId)) ); 
     uiMyOwnId := uiMyOwnId + 1;
     uiState := uiState + 1;  // go direct to next state to avoid entering the commands again 
     
  4: // wait for CmdDone 
     IF arAxisStatus_gb[uiAxisIndex].Admin.CmdDone THEN
       uiState := uiState + 1;
		 END_IF
        
  5: // move relative - send three commands in one cycle
     arAxisCtrl_gb[uiAxisIndex].PosMode.Distance := 30;
     arAxisCtrl_gb[uiAxisIndex].PosMode.Velocity := 10;
     aruliReturnedCmdId[3] := arAxisCtrl_gb[uiAxisIndex].Admin.mTriggerMoveCmd(_OpMode:= ModePosRel, Buffered:=TRUE, UserID:=CONCAT('my own id ', TO_STRING(uiMyOwnId)) );
     uiMyOwnId := uiMyOwnId + 1; 
     arAxisCtrl_gb[uiAxisIndex].PosMode.Distance := -30;
     arAxisCtrl_gb[uiAxisIndex].PosMode.Velocity := 20;
     aruliReturnedCmdId[4] := arAxisCtrl_gb[uiAxisIndex].Admin.mTriggerMoveCmd(_OpMode:= ModePosRel, Buffered:=TRUE, UserID:=CONCAT('my own id ', TO_STRING(uiMyOwnId)) ); 
     uiMyOwnId := uiMyOwnId + 1; 
     arAxisCtrl_gb[uiAxisIndex].PosMode.Distance := 60;
     arAxisCtrl_gb[uiAxisIndex].PosMode.Velocity := 30;
     aruliReturnedCmdId[5] := arAxisCtrl_gb[uiAxisIndex].Admin.mTriggerMoveCmd(_OpMode:= ModePosRel, Buffered:=TRUE, UserID:=CONCAT('my own id ', TO_STRING(uiMyOwnId)) ); 
     uiMyOwnId := uiMyOwnId + 1;
     uiState := uiState + 1;  // go direct to next state to avoid entering the commands again 
     
  6: // // wait for CmdDone 
     IF arAxisStatus_gb[uiAxisIndex].Admin.CmdDone THEN
       uiState := uiState + 1;
		 END_IF

  7: // move additive - send three commands in one cycle
     arAxisCtrl_gb[uiAxisIndex].PosMode.Distance := 30;
     arAxisCtrl_gb[uiAxisIndex].PosMode.Velocity := 10;
     aruliReturnedCmdId[6] := arAxisCtrl_gb[uiAxisIndex].Admin.mTriggerMoveCmd(_OpMode:= ModePosAdd, Buffered:=TRUE, UserID:=CONCAT('my own id ', TO_STRING(uiMyOwnId)) );
     uiMyOwnId := uiMyOwnId + 1; 
     arAxisCtrl_gb[uiAxisIndex].PosMode.Distance := -30;
     arAxisCtrl_gb[uiAxisIndex].PosMode.Velocity := 20;
     aruliReturnedCmdId[7] := arAxisCtrl_gb[uiAxisIndex].Admin.mTriggerMoveCmd(_OpMode:= ModePosAdd, Buffered:=TRUE, UserID:=CONCAT('my own id ', TO_STRING(uiMyOwnId)) ); 
     uiMyOwnId := uiMyOwnId + 1; 
     arAxisCtrl_gb[uiAxisIndex].PosMode.Distance := 60;
     arAxisCtrl_gb[uiAxisIndex].PosMode.Velocity := 30;
     aruliReturnedCmdId[8] := arAxisCtrl_gb[uiAxisIndex].Admin.mTriggerMoveCmd(_OpMode:= ModePosAdd, Buffered:=TRUE, UserID:=CONCAT('my own id ', TO_STRING(uiMyOwnId)) ); 
     uiMyOwnId := uiMyOwnId + 1;
     uiState := uiState + 1;  // go direct to next state to avoid entering the commands again 
     
  8: // wait for CmdDone  
     IF arAxisStatus_gb[uiAxisIndex].Admin.CmdDone THEN
       IF bRunInLoop THEN  // do it in a loop
         udiLoopCounter := udiLoopCounter + 1;
         uiState := 1;
       ELSE
         uiState := uiState + 1;
			 END_IF
		 END_IF
  
END_CASE</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>cde4622a-1947-4659-8697-5254306a4365</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="DemoKinematicsCommands" pouType="program">
                <interface>
                  <localVars>
                    <variable name="uiState">
                      <type>
                        <UINT />
                      </type>
                    </variable>
                    <variable name="uiKinematicsIndex">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="MOTIF_CONFIG.MIN_KIN_INDEX" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> use the 1st kinematic as default for demo </xhtml>
                      </documentation>
                    </variable>
                    <variable name="uiMyOwnId">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="142" />
                      </initialValue>
                    </variable>
                    <variable name="aruliReturnedCmdId">
                      <type>
                        <array>
                          <dimension lower="0" upper="5" />
                          <baseType>
                            <ULINT />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="udiLoopCounter">
                      <type>
                        <UDINT />
                      </type>
                    </variable>
                    <variable name="bRunInLoop">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="FALSE" />
                      </initialValue>
                    </variable>
                    <variable name="bStop">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="FALSE" />
                      </initialValue>
                    </variable>
                    <variable name="arPoints">
                      <type>
                        <array>
                          <dimension lower="0" upper="6" />
                          <baseType>
                            <derived name="TE_ARR_COORDS" />
                          </baseType>
                        </array>
                      </type>
                      <initialValue>
                        <arrayValue>
                          <value>
                            <arrayValue>
                              <value>
                                <simpleValue value="0" />
                              </value>
                              <value>
                                <simpleValue value="0" />
                              </value>
                              <value>
                                <simpleValue value="0" />
                              </value>
                            </arrayValue>
                          </value>
                          <value>
                            <arrayValue>
                              <value>
                                <simpleValue value="30" />
                              </value>
                              <value>
                                <simpleValue value="20" />
                              </value>
                              <value>
                                <simpleValue value="10" />
                              </value>
                            </arrayValue>
                          </value>
                          <value>
                            <arrayValue>
                              <value>
                                <simpleValue value="-30" />
                              </value>
                              <value>
                                <simpleValue value="-20" />
                              </value>
                              <value>
                                <simpleValue value="-10" />
                              </value>
                            </arrayValue>
                          </value>
                          <value>
                            <arrayValue>
                              <value>
                                <simpleValue value="20" />
                              </value>
                              <value>
                                <simpleValue value="20" />
                              </value>
                              <value>
                                <simpleValue value="20" />
                              </value>
                            </arrayValue>
                          </value>
                          <value>
                            <arrayValue>
                              <value>
                                <simpleValue value="30" />
                              </value>
                              <value>
                                <simpleValue value="30" />
                              </value>
                              <value>
                                <simpleValue value="30" />
                              </value>
                            </arrayValue>
                          </value>
                          <value>
                            <arrayValue>
                              <value>
                                <simpleValue value="-30" />
                              </value>
                              <value>
                                <simpleValue value="-30" />
                              </value>
                              <value>
                                <simpleValue value="-30" />
                              </value>
                            </arrayValue>
                          </value>
                          <value>
                            <arrayValue>
                              <value>
                                <simpleValue value="60" />
                              </value>
                              <value>
                                <simpleValue value="60" />
                              </value>
                              <value>
                                <simpleValue value="60" />
                              </value>
                            </arrayValue>
                          </value>
                        </arrayValue>
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Define the Coordinates for your Kinematic
(TE_ARR_COORDS is just an Array of LREAL from 0..15)</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT TE_KinInterfaceMainProg.InitDone OR TE_KinInterfaceMainProg.Error  THEN
  RETURN; // do not continue, when Motion is not in RUN or initialization failed.
END_IF

CASE uiState OF
  1: // switch to StandBy
     arKinCtrl_gb[uiKinematicsIndex].Admin._OpModeBits.MODE_COORD_STANDBY := TRUE;
     IF arKinStatus_gb[uiKinematicsIndex].Admin.CmdDone THEN
       uiState := uiState + 1;
		 END_IF
  
  2: // go to home position 0 with move absolute 
     arKinCtrl_gb[uiKinematicsIndex].CoordMode.Point := arPoints[0];
     arKinCtrl_gb[uiKinematicsIndex].CoordMode.DynValues.Velocity := 200;
     arKinCtrl_gb[uiKinematicsIndex].CoordMode.DynValues.Acceleration := 500;
     arKinCtrl_gb[uiKinematicsIndex].CoordMode.DynValues.Deceleration := 500;
     arKinCtrl_gb[uiKinematicsIndex].Admin._OpModeBits.MODE_COORD_POS_LIN_ABS := TRUE;
     IF arKinStatus_gb[uiKinematicsIndex].Admin.CmdDone THEN
       uiState := uiState + 1;
		 END_IF
     
  3: // move absolute - send three commands in one cycle 
     arKinCtrl_gb[uiKinematicsIndex].CoordMode.Point := arPoints[1];
     arKinCtrl_gb[uiKinematicsIndex].CoordMode.DynValues.Velocity := 210;
     aruliReturnedCmdId[0] := arKinCtrl_gb[uiKinematicsIndex].Admin.mTriggerMoveCmd(_OpMode:= ModeCoordPosLinAbs, Buffered:= TRUE, UserID:=CONCAT('my own id ', TO_STRING(uiMyOwnId)) );
     uiMyOwnId := uiMyOwnId + 1; 
     arKinCtrl_gb[uiKinematicsIndex].CoordMode.Point := arPoints[2];
     arKinCtrl_gb[uiKinematicsIndex].CoordMode.DynValues.Velocity := 220;
     aruliReturnedCmdId[1] := arKinCtrl_gb[uiKinematicsIndex].Admin.mTriggerMoveCmd(_OpMode:= ModeCoordPosLinAbs, Buffered:= TRUE, UserID:=CONCAT('my own id ', TO_STRING(uiMyOwnId)) );
     uiMyOwnId := uiMyOwnId + 1; 
     arKinCtrl_gb[uiKinematicsIndex].CoordMode.Point := arPoints[3];
     arKinCtrl_gb[uiKinematicsIndex].CoordMode.DynValues.Velocity := 230;
     aruliReturnedCmdId[2] := arKinCtrl_gb[uiKinematicsIndex].Admin.mTriggerMoveCmd(_OpMode:= ModeCoordPosLinAbs, Buffered:= TRUE, UserID:=CONCAT('my own id ', TO_STRING(uiMyOwnId)) );
     uiMyOwnId := uiMyOwnId + 1;
     uiState := uiState + 1;  // go direct to next state to avoid entering the commands again 
     
  4: // wait for CmdDone 
     IF arKinStatus_gb[uiKinematicsIndex].Admin.CmdDone THEN
       uiState := uiState + 1;
		 END_IF
        
  5: // move relative - send three commands in one cycle
     arKinCtrl_gb[uiKinematicsIndex].CoordMode.Point := arPoints[4];
     arKinCtrl_gb[uiKinematicsIndex].CoordMode.DynValues.Velocity := 210;
     aruliReturnedCmdId[3] := arKinCtrl_gb[uiKinematicsIndex].Admin.mTriggerMoveCmd(_OpMode:= ModeCoordPosLinRel, Buffered:= TRUE, UserID:=CONCAT('my own id ', TO_STRING(uiMyOwnId)) );
     uiMyOwnId := uiMyOwnId + 1; 
     arKinCtrl_gb[uiKinematicsIndex].CoordMode.Point := arPoints[5];
     arKinCtrl_gb[uiKinematicsIndex].CoordMode.DynValues.Velocity := 220;
     aruliReturnedCmdId[4] := arKinCtrl_gb[uiKinematicsIndex].Admin.mTriggerMoveCmd(_OpMode:= ModeCoordPosLinRel, Buffered:= TRUE, UserID:=CONCAT('my own id ', TO_STRING(uiMyOwnId)) ); 
     uiMyOwnId := uiMyOwnId + 1; 
     arKinCtrl_gb[uiKinematicsIndex].CoordMode.Point := arPoints[6];
     arKinCtrl_gb[uiKinematicsIndex].CoordMode.DynValues.Velocity := 230;
     aruliReturnedCmdId[5] := arKinCtrl_gb[uiKinematicsIndex].Admin.mTriggerMoveCmd(_OpMode:= ModeCoordPosLinRel, Buffered:= TRUE, UserID:=CONCAT('my own id ', TO_STRING(uiMyOwnId)) ); 
     uiMyOwnId := uiMyOwnId + 1;
     uiState := uiState + 1;  // go direct to next state to avoid entering the commands again 
     
  6: // // wait for CmdDone 
     IF arKinStatus_gb[uiKinematicsIndex].Admin.CmdDone THEN
       IF bRunInLoop THEN  // do it in a loop
         udiLoopCounter := udiLoopCounter + 1;
         uiState := 1;
       ELSE
         uiState := uiState + 1;
			 END_IF
		 END_IF 
END_CASE

// send an unbuffered command to stop on a defined point
IF bStop THEN
  arKinCtrl_gb[uiKinematicsIndex].CoordMode.Point := arPoints[0];
  arKinCtrl_gb[uiKinematicsIndex].CoordMode.DynValues.Velocity :=142;
  arKinCtrl_gb[uiKinematicsIndex].Admin.mTriggerMoveCmd(_OpMode:= ModeCoordPosLinAbs, Buffered:= FALSE, UserID:='unbuffered command' );
  uiState:=0;
  bStop:=FALSE;
END_IF</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>a5e687dd-24a9-4edc-a1ae-7def330532ce</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="Version_AxisKinInterface" pouType="function">
                <interface>
                  <returnType>
                    <BOOL />
                  </returnType>
                  <documentation>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
Short description
"""""""""""""""""
Axis Kin Interface example project 

DISCLAIMER
""""""""""
It is acknowledged that with regard to these software programs and program modules free of charge, Bosch Rexroth's usually practised, in-house test and release 
procedures have not been accomplished. These software programs and program modules free of charge serve only as an example for possible applications.
They are intended as a help in order to obtain additional experience regarding function, operation, performance and capacity of a maybe later issued series release.
Therefore Bosch Rexroth disclaims any liability and rejects to assume responsibility that these software programs or program modules, including any information and 
data stored in those programs, are suitable for any intended use or that these programs will work without errors in any combination with the data processing environment.
Providing you with these software programs shall neither constitute a claim for technical support nor for any other remedy for defects. Any claims for damages of any
nature and for any legal reason arising from installing or using these software programs or program modules are excluded, unless these damages was caused by Bosch Rexroth`s 
statutory representatives or employees by wilful misconduct or by gross negligence or liability is compulsory in accordance with the German product liability law.
In any case Bosch Rexroth`s liability for any consequential or incidental damages such as, but not limited to loss of profit, loss of production or loss of data is excluded.

Modification - History
""""""""""""""""""""""
========   =========
Version:   0.1.0.1
Name   :   DC-AE ESW4 (klaugold)
Date   :   2020-May-04
Comment:   - 1st version 
========   =========
Version:   0.1.0.2
Name   :   KG DC-AE/ESW4
Date   :   2020-May-06
Comment:   - 2nd test-version 
           - set MotionTask to EVENT07. Added info about watchdog in MotionTask.
========   =========
Version:   1.4.0.0
Name   :   KG DC-AE/ESW4
Date   :   2020-Jul-03
Comment:   - 1st version with Kinematics-Interface 
========   =========
Version:   1.4.1.0
Name   :   KG DC-AE/ESW4
Date   :   2020-Sep-14
Comment:   - Update device description to 1.4.0.0 and added/corrected some comments 
========   =========
Version:   1.5.1.0
Name   :   KG DC-AE/ESW4
Date   :   2020-Sep-29
Comment:   - Set parameters in MOTIF_CONFIG to 1..x 
========   =========
Version:   1.6.0.0
Name   :   KG DC-AE/ESW4
Date   :   2020-Nov-16
Comment:   - adapt task priorities to new range 20..39 
========   =========     
Version:   1.10.0.0
Name   :   KG DC-AE/ESW4
Date   :   2021-Jun-18
Comment:   - adapt task priority of MotionTask to 29 and new name MainTaskMotif to avoid override of MainTask. 
             Recommendation: remove demo programs and merge all into one MainTask to optimize performance 
           - new input Buffered used in DemoKinematicsCommands and increased velocities 
           - added check for NOT InitDone OR Error in demo programs 
========   =========     
</xhtml>
                  </documentation>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/buildproperties" handleUnknown="implementation">
                    <BuildProperties>
                      <ExcludeFromBuild>true</ExcludeFromBuild>
                    </BuildProperties>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>eb7854fe-2431-4eea-a135-3b3a6f30b16e</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="FB_InitMotionToSetPoint" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="bInit">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Condition from Idle to start the init state machine
 Init at rising edge</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bStop">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bInitPosition">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Position to reach at the end of init.    </xhtml>
                      </documentation>
                    </variable>
                  </inputVars>
                  <inOutVars>
                    <variable name="stPlcOpenThisFb">
                      <type>
                        <derived name="ST_PlcOpenFbs" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Access for manual oprations on PLCopen FB of THIS FB</xhtml>
                      </documentation>
                    </variable>
                    <variable name="stSetDynamicParams">
                      <type>
                        <derived name="ST_SetMotionParam" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Contains dynamic parameters for MC_MoveAbsolute of THIS FB
 Default parameters from IN_OUT</xhtml>
                      </documentation>
                    </variable>
                  </inOutVars>
                  <outputVars>
                    <variable name="bInitDone">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bError">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="stStateMachineInfo">
                      <type>
                        <derived name="ST_StateMachineInfo" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
        List of Structures
    
 Internal state machine of THIS FB</xhtml>
                      </documentation>
                    </variable>
                    <variable name="mcReadActualPosition">
                      <type>
                        <derived name="MC_ReadActualPosition" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
        List of Function Blocks
    </xhtml>
                      </documentation>
                    </variable>
                    <variable name="mcReadActualVelocity">
                      <type>
                        <derived name="MC_ReadActualVelocity" />
                      </type>
                    </variable>
                    <variable name="mcReadStatus">
                      <type>
                        <derived name="MC_ReadStatus" />
                      </type>
                    </variable>
                    <variable name="mcPower">
                      <type>
                        <derived name="MC_Power" />
                      </type>
                    </variable>
                    <variable name="mcMoveAbsolute">
                      <type>
                        <derived name="MC_MoveAbsolute" />
                      </type>
                    </variable>
                    <variable name="mcStop">
                      <type>
                        <derived name="MC_Stop" />
                      </type>
                      <initialValue>
                        <structValue>
                          <value member="Deceleration">
                            <simpleValue value="1" />
                          </value>
                        </structValue>
                      </initialValue>
                    </variable>
                    <variable name="mcReset">
                      <type>
                        <derived name="MC_Reset" />
                      </type>
                    </variable>
                    <variable name="uiGetIndexFromName">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="1" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
        General values
    </xhtml>
                      </documentation>
                    </variable>
                    <variable name="rTrigInit">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used for init or reset from Error Stop</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
    Some inits independant of the Main State Machine
*)
IF NOT TE_AxisInterfaceMainProg.InitDone OR TE_AxisInterfaceMainProg.Error THEN
    stStateMachineInfo.eState := EN_MoveAbsStates.eIdle;
    // This is an implementation of Bosch Rexroth, normally I do not use this.
    // do not continue, when Motion is not in RUN or initialization failed.
    RETURN; 
ELSE
    // Read status if Init Done and no interface error,
    // arAxisStatus_gb is a GLOBAL Value of Bosch Rexroth implementation.
    // This value is also directoy available in the Datalayer in s=motion/axs/Axis_X/state/opstate/plcopen
    // Warning: Do not confuse X_Axis: MB_AXISIF_REF :=(AxisName:='Axis_X',AxisNo:=1);
    uiGetIndexFromName := TE_GetAxisInterfaceIndex('Axis_X');
    stPlcOpenThisFb.strGetAxisStatus := arAxisStatus_gb[uiGetIndexFromName].Data.PLCopenState; 
    stPlcOpenThisFb.bEnableReadStatus := TRUE;
    stPlcOpenThisFb.bEnableReadPosition := TRUE;
    stPlcOpenThisFb.bEnableReadVelocity := TRUE;
END_IF

(*
    Remote conditions
    
    Note:
        Ideally, with a real machine, code should avoid entering remote mode (manual)
        if some conditions, like "standstill" are not fullfilled.
        this is for next semester... in advanced automation.
*)
IF stPlcOpenThisFb.bEnableRemote THEN
    // In case of remote, reset state machine.
    stStateMachineInfo.eState := EN_MoveAbsStates.eIdle;
    // Auto reset of mcMoveAbsolute execute to simplify commands from HMI.
    IF mcMoveAbsolute.Done THEN
        stPlcOpenThisFb.bMoveAbs := FALSE;
    END_IF
    // Auto reset of mcStop execute to simplify commands from HMI.
    IF mcStop.Done THEN
        stPlcOpenThisFb.bStop := FALSE;
        stPlcOpenThisFb.bMoveAbs := FALSE;
    END_IF
    // Direct access to FB if femote active.
    mcPower.Enable := stPlcOpenThisFb.bPowerOn;
    mcMoveAbsolute.Execute := stPlcOpenThisFb.bMoveAbs; 
    mcStop.Execute := stPlcOpenThisFb.bStop;
    mcReset.Execute := stPlcOpenThisFb.bReset;
END_IF

(*
    Main State Machine.
*)
rTrigInit(CLK := bInit);

CASE stStateMachineInfo.eState OF
    EN_MoveAbsStates.eIdle :
        stStateMachineInfo.strState := 'Idle';
        IF mcReadStatus.ErrorStop THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eErrorStop;    
        ELSIF rTrigInit.Q                 AND
           mcReadStatus.Disabled          AND 
           NOT stPlcOpenThisFb.bEnableRemote THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eIsPowerOff;
        END_IF
    EN_MoveAbsStates.eIsPowerOff :
        stStateMachineInfo.strState := 'Is Power Off';
        IF NOT mcReadStatus.Error THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eWaitPowerOn;
        ELSE
            stStateMachineInfo.eState := EN_MoveAbsStates.eErrorStop;
        END_IF
    EN_MoveAbsStates.eWaitPowerOn :
        stStateMachineInfo.strState := 'Wait for Power On';
        IF mcReadStatus.Standstill THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eIsPowerOn;
        ELSIF mcReadStatus.ErrorStop THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eErrorStop;
        END_IF
    EN_MoveAbsStates.eIsPowerOn :
        stStateMachineInfo.strState := 'Is Power On';
        IF NOT mcReadStatus.Error THEN
            stSetDynamicParams.rPosition_mm := bInitPosition;
            stStateMachineInfo.eState := EN_MoveAbsStates.eInitMotion;
        ELSE
            stStateMachineInfo.eState := EN_MoveAbsStates.eErrorStop;
        END_IF
    EN_MoveAbsStates.eInitMotion :
        stStateMachineInfo.strState := 'Motion Init active';
        IF mcMoveAbsolute.Done THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eInitMotionDone;
        ELSIF bStop THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eStopping;
        ELSIF mcReadStatus.ErrorStop THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eErrorStop;
        END_IF
    EN_MoveAbsStates.eInitMotionDone :
        stStateMachineInfo.strState := 'Motion Init done';
        IF mcReadStatus.ErrorStop THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eErrorStop;
        ELSIF rTrigInit.Q THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eIsPowerOn;
        END_IF
    EN_MoveAbsStates.eStopping :
        stStateMachineInfo.strState := 'Stopping active';
        (*
            PLCopen motion control part 1 says:
            Standstill (eIsPowerOn) if
            MC_Stop.Done = TRUE AND MC_Stop.Execute = FALSE
        *)
        IF mcStop.Done AND
           NOT bStop   THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eIsPowerOn;
        ELSIF mcReadStatus.ErrorStop THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eErrorStop;
        END_IF
    EN_MoveAbsStates.eMoveDown :
        stStateMachineInfo.strState := 'Move Down active';
        // not used 
        ;
    EN_MoveAbsStates.eMoveDownDone :
        stStateMachineInfo.strState := 'Move Down done';
        // not used 
        ;
    EN_MoveAbsStates.eCloseGripper :
        stStateMachineInfo.strState := 'Close Gripper active';
        // not used 
        ;
    EN_MoveAbsStates.eGripperClosed :
        stStateMachineInfo.strState := 'Close Gripper done';
        // not used 
        ;
    
    EN_MoveAbsStates.eReset :
        (*
            PLCopen motion control part 1 says:
            Standstill (eIsPowerOn) if:
                MC_Reset AND MC_Power.Status = TRUE AND MC_Power.Enable = TRUE
            Disabled (eIsPowerOff) if:
                MC_Reset AND MC_Power.Status = FALSE
        *)
        IF mcReset.Done   AND
           mcPower.Status AND
           mcPower.Enable THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eIsPowerOn;
        ELSIF mcReset.Done       AND
              NOT mcPower.Status THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eIsPowerOff;
        END_IF

    EN_MoveAbsStates.eErrorStop :
        stStateMachineInfo.strState := 'Is in Error Stop';
        IF rTrigInit.Q THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eReset;
        END_IF        
END_CASE
(*
    Store last active state, State at time N-1
*)
IF stStateMachineInfo.eState &lt;&gt; stStateMachineInfo.eStateMem THEN
    stStateMachineInfo.eStateNm1 := stStateMachineInfo.eStateMem;    
END_IF
stStateMachineInfo.eStateMem := stStateMachineInfo.eState;
(*
    Get state machine in a DINT format
*)
stStateMachineInfo.diState := stStateMachineInfo.eState;
(*
    Error state depends only of the state machine in combinational logic.
    That is, some Booleans are defined solely based on a combination of states.
*) 
stStateMachineInfo.bIdle := stStateMachineInfo.eState = EN_MoveAbsStates.eIdle;
stStateMachineInfo.bError := stStateMachineInfo.eState = EN_MoveAbsStates.eErrorStop;
stStateMachineInfo.bActive := NOT (stStateMachineInfo.eState = EN_MoveAbsStates.eIdle) AND
                              NOT (stStateMachineInfo.eState = EN_MoveAbsStates.eErrorStop);


(*
    Call all Function Blocks at the end of the program
    This is a good practice.
*)
mcReadStatus(Axis := X_Axis,
             Enable := stPlcOpenThisFb.bEnableReadStatus);             // Does not depends on state machine

mcReadActualPosition(Axis := X_Axis,
                     Enable := stPlcOpenThisFb.bEnableReadPosition);   // Does not depends on state machine
                                         
mcReadActualVelocity(Axis := X_Axis,
                     Enable := stPlcOpenThisFb.bEnableReadVelocity);   // Does not depends on state machine
                     
(*
    Activation of Function Blocks depending only of states
    EXCEPTION: ativation only if NOT the remove flat (to allow manual action on FBs)
*)
IF NOT stPlcOpenThisFb.bEnableRemote THEN
    // Enable in any case, else (idle or PowerOff)
    mcPower.Enable := NOT (stStateMachineInfo.eState = EN_MoveAbsStates.eIdle       OR
                           stStateMachineInfo.eState = EN_MoveAbsStates.eIsPowerOff);
    // Only active while executing motion
    mcMoveAbsolute.Execute := (stStateMachineInfo.eState = EN_MoveAbsStates.eInitMotion);
    // Only active while executing stop
    mcStop.Execute := (stStateMachineInfo.eState = EN_MoveAbsStates.eStopping);
    // Only active while error
    mcReset.Execute := (stStateMachineInfo.eState = EN_MoveAbsStates.eReset);
END_IF

mcPower(Axis := X_Axis);

mcMoveAbsolute(Axis := X_Axis,
               Position := stSetDynamicParams.rPosition_mm,
               Velocity := stSetDynamicParams.rVeloctiy_mm_s,
               Acceleration := stSetDynamicParams.rAcceleration_mm_s2,
               Deceleration := stSetDynamicParams.rDeceleration_m_s2,
               Jerk := stSetDynamicParams.rJerk_m_s3);               

// A noter que un stop sans décélération conduit à une erreur !
mcStop(Axis := X_Axis);

mcReset(Axis := X_Axis);

(*
    List of errors you want to indicate
*)
bError := (stStateMachineInfo.eState = EN_MoveAbsStates.eErrorStop);
bInitDone := (stStateMachineInfo.eState = EN_MoveAbsStates.eInitMotionDone);</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c8ce17c1-b1e1-4ecd-aa7d-71a9c78b80c4</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="FB_GenerateProfile" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="bStartForward">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Start of motion at rising edge.</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bStartBackward">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="startPosition_mm">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Should be 0 for first version, could be extended for any position</xhtml>
                      </documentation>
                    </variable>
                    <variable name="endPosition_mm">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Should be limited to 100 mm</xhtml>
                      </documentation>
                    </variable>
                    <variable name="udiCyclTime_ms">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Cycle time in ms of the task where FB is running.</xhtml>
                      </documentation>
                    </variable>
                    <variable name="udiCycleTimeMult">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Cycle time multiplier, used to compute duration of motion
 This could be made automatically later,
 Now result in Output</xhtml>
                      </documentation>
                    </variable>
                  </inputVars>
                  <inOutVars>
                    <variable name="arGoToPos">
                      <type>
                        <array>
                          <dimension lower="0" upper="GVL_CyclSetPoint.c_uiMaxProfilePoints" />
                          <baseType>
                            <LREAL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used for verification of data, we do not nead them for motion</xhtml>
                      </documentation>
                    </variable>
                    <variable name="arReturnFromPos">
                      <type>
                        <array>
                          <dimension lower="0" upper="GVL_CyclSetPoint.c_uiMaxProfilePoints" />
                          <baseType>
                            <LREAL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used for verification of data, we do not nead them for motion</xhtml>
                      </documentation>
                    </variable>
                  </inOutVars>
                  <outputVars>
                    <variable name="udiMotionTime_ms">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Is time to execute the profile in ms
 Multiplication of udiCyclTime_ms x udiCycleTimeMult</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bDoneForward">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Motion finished</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bDoneBackward">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="lrSetPosition">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Motion set position</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bErrorTimeMultToBig">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> True if udiCycleTimeMult Exceeds, FB not executed</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bActive">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Point generator active</xhtml>
                      </documentation>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="discreteTimeIndex">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Time index of position</xhtml>
                      </documentation>
                    </variable>
                    <variable name="rStartForward">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> rising edge of start</xhtml>
                      </documentation>
                    </variable>
                    <variable name="rStartBackward">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="lrTimeScaler">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Ce machin là va devoir être expliqué avec pas mal de détail en théorie.</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">rStartForward(clk := bStartForward);
rStartBackward(clk := bStartBackward);


udiMotionTime_ms := udiCyclTime_ms * udiCycleTimeMult;

IF udiCycleTimeMult &gt; GVL_CyclSetPoint.c_uiMaxProfilePoints THEN
    bErrorTimeMultToBig := TRUE;
    bActive := FALSE;
    bDoneForward := FALSE;
    bDoneBackward := FALSE;
ELSE
    IF bStartForward THEN
        // Init motion
        IF rStartForward.Q THEN
            lrSetPosition := startPosition_mm;
            discreteTimeIndex := 0; 
            lrTimeScaler := 1/UDINT_TO_LREAL(udiCycleTimeMult);
            bActive := TRUE;
            bDoneForward := FALSE;
        END_IF // rStartForward.Q
        
        IF NOT bDoneForward THEN
            // Matlab operation with some modifications : 
            // position_yAxis(iLoop) = (t_xAxis(iLoop)^3 * P5_position(4) + t_xAxis(iLoop)^4 * P5_position(5) + t_xAxis(iLoop)^5 * P5_position(6)) * y_scaling_mm;
            arGoToPos[discreteTimeIndex] := (EXPT(lrTimeScaler*discreteTimeIndex,3) * GVL_CyclSetPoint.P5[4] +
                                             EXPT(lrTimeScaler*discreteTimeIndex,4) * GVL_CyclSetPoint.P5[5] +
                                             EXPT(lrTimeScaler*discreteTimeIndex,5) * GVL_CyclSetPoint.P5[6]) * endPosition_mm;
            // Set new value
            lrSetPosition := arGoToPos[discreteTimeIndex];
            // inc at each cycle
            discreteTimeIndex := discreteTimeIndex + 1;
            IF discreteTimeIndex &gt; udiCycleTimeMult THEN
                bDoneForward := TRUE;
            END_IF // discreteTimeIndex &gt; udiCycleTimeMult
        END_IF // IF bDoneForward 
    END_IF    

    IF bStartBackward THEN
        // Init motion
        IF rStartBackward.Q THEN
            lrSetPosition := startPosition_mm;
            discreteTimeIndex := 0; 
            lrTimeScaler := 1/UDINT_TO_LREAL(udiCycleTimeMult);
            bActive := TRUE;
            bDoneBackward := FALSE;
        END_IF // rStartForward.Q
        
        IF NOT bDoneBackward THEN
            // Matlab operation with some modifications : 
            // position_yAxisBack(iLoop) = y_scaling_mm - (t_xAxis(iLoop)^3 * P5_position(4) + t_xAxis(iLoop)^4 * P5_position(5) + t_xAxis(iLoop)^5 * P5_position(6)) * y_scaling_mm;
            arReturnFromPos[discreteTimeIndex] := endPosition_mm - (EXPT(lrTimeScaler*discreteTimeIndex,3) * GVL_CyclSetPoint.P5[4] +
                                                                    EXPT(lrTimeScaler*discreteTimeIndex,4) * GVL_CyclSetPoint.P5[5] +
                                                                    EXPT(lrTimeScaler*discreteTimeIndex,5) * GVL_CyclSetPoint.P5[6]) * endPosition_mm;
            // Set new value
            lrSetPosition := arReturnFromPos[discreteTimeIndex];
            // inc at each cycle
            discreteTimeIndex := discreteTimeIndex + 1;
            IF discreteTimeIndex &gt; udiCycleTimeMult THEN
                bDoneBackward := TRUE;
            END_IF // discreteTimeIndex &gt; udiCycleTimeMult
        END_IF // IF bDoneBackward 
    END_IF    

END_IF
</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>50792f82-5944-4fa1-a456-dca8caa57200</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="PLC_PRG" pouType="program">
                <interface>
                  <localVars>
                    <variable name="stPlcOpenFbs">
                      <type>
                        <derived name="ST_PlcOpenFbs" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
        First part of variables are similar to Practical Work for Move Absolute
        Practical Work for Move Absolute is encapsulated in FB_InitMotionToSetPoint
    
 Access for manual oprations on PLCopen FB of THIS FB</xhtml>
                      </documentation>
                    </variable>
                    <variable name="stSetMotionParam">
                      <type>
                        <derived name="ST_SetMotionParam" />
                      </type>
                      <initialValue>
                        <structValue>
                          <value member="rVeloctiy_mm_s">
                            <simpleValue value="50" />
                          </value>
                          <value member="rAcceleration_mm_s2">
                            <simpleValue value="0.1" />
                          </value>
                          <value member="rDeceleration_m_s2">
                            <simpleValue value="0.1" />
                          </value>
                          <value member="rJerk_m_s3">
                            <simpleValue value="1" />
                          </value>
                        </structValue>
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Contains dynamic parameters for MC_MoveAbsolute</xhtml>
                      </documentation>
                    </variable>
                    <variable name="fbInitMotionToSetPoint">
                      <type>
                        <derived name="FB_InitMotionToSetPoint" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used to init the axis to a preset initPosition</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                  <documentation>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">
	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Projet No: PW Move Absolute
	Author:		Cedric Lenoir
	Date:		2023 October 18
	
	Summary:	Template to go to init position before to use
                Cyclic Set Point
</xhtml>
                  </documentation>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// Should be ideally a reset button from the Cell
fbInitMotionToSetPoint.bInit := GVL_CyclSetPoint.stRemote.in.bInit;
// Is 0 by default if not set
fbInitMotionToSetPoint.bInitPosition := GVL_CyclSetPoint.stRemote.in.bInitPosition;
// Should be ideally implemented from E-Stop safety loop before STO.
fbInitMotionToSetPoint.bStop := GVL_CyclSetPoint.stRemote.in.bStop;

(*
    Logic and sequence to be programmed here.
    Init Motion to set point then write a sequence to move forward and back
    with the motion profile
*)





fbInitMotionToSetPoint(stPlcOpenThisFb := stPlcOpenFbs,
                       stSetDynamicParams := stSetMotionParam,
                       bInitDone =&gt; GVL_CyclSetPoint.stRemote.out.bInitDone,
                       bError =&gt; GVL_CyclSetPoint.stRemote.out.bError);
                       
               </xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>29bdd9ae-e739-4b3b-8b60-81b73ce5c0a6</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="PRG_CyclicSetPoint" pouType="program">
                <interface>
                  <localVars>
                    <variable name="fbGenerateProfile">
                      <type>
                        <derived name="FB_GenerateProfile" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
        Second part of variables are used to generate a motion profile using 5th order polynomial.

        Details of polynomials can be experimented using a mlx Matlab file.  
    </xhtml>
                      </documentation>
                    </variable>
                    <variable name="mlAxsCyclicSetPointData">
                      <type>
                        <derived name="ML_AxsCyclicSetPointData" />
                      </type>
                    </variable>
                    <variable name="mlSetCyclicSetPointData">
                      <type>
                        <derived name="ML_SetCyclicSetPointData" />
                      </type>
                    </variable>
                    <variable name="SETmlAxsCyclicSetPoint">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Utility varialbles for dev</xhtml>
                      </documentation>
                    </variable>
                    <variable name="GETmlAxsCyclicSetPoint">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="SETmsSetCyclicSetPoint">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="GETmsSetCyclicSetPoint">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="lrTestPoint">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="switch">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </localVars>
                  <documentation>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">
	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Projet No: PW Motion Cyclic
	Author:		Cedric Lenoir
	Date:		2023 October 19
	
	Summary:	It MUST work at the same cycle time as the Motion Kernel, i.e. 2 [ms]
                Will be synchronized with the cycle time of the Ethercat real-time bus.

                It means too, that the Profile generator MUST generate a new point each 2 [ms] 
</xhtml>
                  </documentation>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// Here, we must see these two functions as two function blocks which do not have their own static internal variables.
// Static variables are provided by the structures passed by Data VAR_IN_OUT.
mlAxsCyclicSetPointData.In.AxisName := 'Axis_X';
mlSetCyclicSetPointData.In.AxisName := 'Axis_X';
mlAxsCyclicSetPointData.In.Source := 'MotionCyclic';
mlSetCyclicSetPointData.In.Source := 'MotionCyclic';

IF GVL_CyclSetPoint.stRemote.in.bInit THEN
    SETmlAxsCyclicSetPoint := FALSE;
    SETmsSetCyclicSetPoint := FALSE;
    lrTestPoint := 0;
END_IF

IF SETmlAxsCyclicSetPoint THEN
    ML_AxsCyclicSetPoint(Data:= mlAxsCyclicSetPointData,
                         ML_AxsCyclicSetPoint =&gt; GETmlAxsCyclicSetPoint);                            
END_IF

IF SETmsSetCyclicSetPoint THEN
//    mlSetCyclicSetPointData.In.Value := fbGenerateProfile.lrSetPosition;
    IF lrTestPoint &gt;= 5 THEN
        switch := TRUE;
        lrTestPoint := 5;
    END_IF
    IF lrTestPoint &lt;= -5 THEN
        switch := FALSE;
        lrTestPoint := -5;
    END_IF
    
    IF NOT switch THEN
        lrTestPoint := lrTestPoint + 0.003;
    ELSE
        lrTestPoint := lrTestPoint - 0.003;
    END_IF
    mlSetCyclicSetPointData.In.Value := lrTestPoint;
//    mlSetCyclicSetPointData.In.Value := GVL_CyclSetPoint.stRemote.in.lrProfileSetPosition;
    ML_SetCyclicSetPoint(Data := mlSetCyclicSetPointData,
                         ML_SetCyclicSetPoint =&gt; GETmsSetCyclicSetPoint);
END_IF

(*
    Call FB at the end of the Program
*)
fbGenerateProfile(bStartForward := GVL_CyclSetPoint.stRemote.in.bStartForward,
                  bStartBackward := GVL_CyclSetPoint.stRemote.in.bStartBackward,
                  startPosition_mm := GVL_CyclSetPoint.stRemote.in.bInitPosition,
                  endPosition_mm := GVL_CyclSetPoint.stRemote.in.bEndPosition,
                  udiCyclTime_ms := GVL_CyclSetPoint.MOTION_CYCLE_TIME_ms,
                  udiCycleTimeMult := 1000, // Could be a parameter latter when all is working
                  arGoToPos := GVL_CyclSetPoint.arGoToPosition,
                  arReturnFromPos := GVL_CyclSetPoint.arReturnFromPosition,
                  lrSetPosition =&gt; GVL_CyclSetPoint.stRemote.in.lrProfileSetPosition,
                  bDoneForward =&gt; GVL_CyclSetPoint.stRemote.out.bFwdDone,
                  bDoneBackward =&gt; GVL_CyclSetPoint.stRemote.out.bBackDone);</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>1337f422-a28e-48dc-93a7-cdaaa4615d23</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
              <Libraries>
                <Library Name="#IoStandard" Namespace="IoStandard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="true" DefaultResolution="IoStandard, 3.5.17.0 (System)" />
                <Library Name="#CXA_BASE" Namespace="CXAC_Base" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CXAC_Base, 1.16.1.0 (Bosch Rexroth AG)">
                  <Parameters>
                    <Parameter Name="DONOTLOGCALLBACKEVENTS" Value="TRUE" />
                  </Parameters>
                </Library>
                <Library Name="#CXA_COMMONTYPES" Namespace="CXA_CommonTypes" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CXA_CommonTypes, 1.14.0.0 (Bosch Rexroth AG)" />
                <Library Name="#CXA_UTILITIES" Namespace="CXA_Utilities" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CXA_Utilities, 1.14.0.2 (Bosch Rexroth AG)" />
                <Library Name="#Standard" Namespace="Standard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Standard, 3.5.17.0 (System)" />
                <Library Name="#BreakpointLogging" Namespace="BPLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Breakpoint Logging Functions, 3.5.5.0 (3S - Smart Software Solutions GmbH)" />
                <Library Name="#CXA_MOTION_INTERFACE" Namespace="CXA_MotionInterface" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="" />
                <Library Name="#CXA_MOTION_IF_USER" Namespace="CXA_MotionInterfaceUser" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="">
                  <Parameters>
                    <Parameter Name="MIN_AXIS_INDEX" Value="1" />
                    <Parameter Name="MAX_AXIS_INDEX" Value="10" />
                    <Parameter Name="CFG_MODE_AXS" Value="TE_AXIS_IDX_CONFIG_MODE.AUTO" />
                    <Parameter Name="MIN_KIN_INDEX" Value="1" />
                    <Parameter Name="MAX_KIN_INDEX" Value="3" />
                    <Parameter Name="CFG_MODE_KIN" Value="TE_KINEMATICS_IDX_CONFIG_MODE.AUTO" />
                    <Parameter Name="CONFIG_FILE" Value="'./config/AxesKinematicsDefines.json'" />
                  </Parameters>
                </Library>
                <Library Name="#System_VisuElems" Namespace="VisuElems" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElems, 3.5.17.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemMeter" Namespace="VisuElemMeter" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemMeter, 3.5.17.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsSpecialControls" Namespace="VisuElemsSpecialControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsSpecialControls, 3.5.17.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsWinControls" Namespace="VisuElemsWinControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsWinControls, 3.5.17.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemTextEditor" Namespace="VisuElemTextEditor" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTextEditor, 3.5.17.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemTrace" Namespace="VisuElemTrace" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTrace, 3.5.17.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuNativeControl" Namespace="VisuNativeControl" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuNativeControl, 3.5.17.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsAlarm" Namespace="VisuElemsAlarm" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsAlarm, 3.5.17.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemCamDisplayer" Namespace="VisuElemCamDisplayer" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemCamDisplayer, 3.5.17.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElem3DPath" Namespace="VisuElem3DPath" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElem3DPath, 3.5.17.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsDateTime" Namespace="VisuElemsDateTime" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsDateTime, 3.5.17.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemXYChart" Namespace="VisuElemXYChart" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemXYChart, 3.5.17.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#system_visuinputs" Namespace="visuinputs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="visuinputs, 3.5.17.0 (system)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#CXA_PLCOPEN" Namespace="CXA_PLCopen" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CXA_PLCopen, * (Bosch Rexroth AG)" />
                <Library Name="#VisuDialogs" Namespace="VisuDialogs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="VisuDialogs, * (System)" />
                <Library Name="#CXA_DRIVE_UTIL" Namespace="CXA_DriveUtil" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CXA_DriveUtil, * (Bosch Rexroth AG)" />
                <Library Name="#IecVarAccess" Namespace="IecVarAccessLibrary" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="IecVarAccess, 3.3.1.20 (System)" />
                <Library Name="#CXA_MOTION" Namespace="CXA_Motion" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CXA_Motion, * (Bosch Rexroth AG)" />
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>756e256f-7171-40af-9791-fbd901421ee1</ObjectId>
                  </data>
                </addData>
              </Libraries>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>cf8c378d-9719-4ede-8578-ff804a4dcea9</ObjectId>
            </data>
          </addData>
        </resource>
        <addData>
          <data name="Device" handleUnknown="discard">
            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
              <DeviceType>
                <DeviceIdentification>
                  <Type>4096</Type>
                  <Id>1001 0081</Id>
                  <Version>1.12.90.0</Version>
                </DeviceIdentification>
                <Connector moduleType="42400" interface="BRC:DataLayer" connectorId="0">
                  <HostParameterSet />
                </Connector>
                <Connector moduleType="256" interface="Common.PCI" connectorId="1">
                  <HostParameterSet />
                </Connector>
                <DeviceParameterSet>
                  <Parameter ParameterId="2147483920" type="std:BOOL" IndexInDevDesc="0">
                    <Attributes offlineaccess="none" onlineaccess="none" />
                    <Value name="_x0032_147483920" visiblename="Use scheduler priority" offlineaccess="none" onlineaccess="none" desc="Use scheduler priority as IEC task priority.">True</Value>
                    <Name>Use scheduler priority</Name>
                    <Description>Use scheduler priority as IEC task priority.</Description>
                  </Parameter>
                </DeviceParameterSet>
              </DeviceType>
            </Device>
          </data>
          <data name="configurations" handleUnknown="discard">
            <configurations>
              <configuration name="Realtime_Data">
                <addData>
                  <data name="Device" handleUnknown="discard">
                    <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" fixedIndex="0" xmlns="">
                      <DeviceType>
                        <DeviceIdentification>
                          <Type>42420</Type>
                          <Id>1001 0000</Id>
                          <Version>1.8.0.0</Version>
                        </DeviceIdentification>
                        <Connector moduleType="42420" role="child" interface="BRC:DataLayer" connectorId="0">
                          <HostParameterSet />
                        </Connector>
                        <Connector moduleType="42421" interface="BRC:DataLayerPath" connectorId="1">
                          <HostParameterSet />
                        </Connector>
                        <DeviceParameterSet />
                      </DeviceType>
                    </Device>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>19f84e2f-c0d6-4735-9eb6-2cddceb104a8</ObjectId>
                  </data>
                </addData>
              </configuration>
            </configurations>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>39a3b798-897b-4d3a-a1e0-01c26379f9f2</ObjectId>
          </data>
        </addData>
      </configuration>
    </configurations>
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Object Name="Device" ObjectId="39a3b798-897b-4d3a-a1e0-01c26379f9f2">
          <Object Name="MotionCyclic" ObjectId="cf8c378d-9719-4ede-8578-ff804a4dcea9">
            <Object Name="Library Manager" ObjectId="756e256f-7171-40af-9791-fbd901421ee1" />
            <Object Name="MainTask" ObjectId="c415bedf-0f09-44b9-bf64-bfdfe9bdba5d" />
            <Object Name="MainTaskMotif" ObjectId="be22be8d-a3eb-40f8-83ca-81c24403a32d" />
            <Object Name="MotionTask_2ms" ObjectId="faa4e80b-0771-456a-b43e-b3737ff8242b" />
            <Folder Name="MotionInterface">
              <Object Name="TE_ARR_COORDS" ObjectId="6a0782e6-b12d-455c-aac3-3d194c70fff5" />
              <Object Name="GlobalAxisDefines" ObjectId="ab70bda9-e364-4244-8eec-6c395de578c2" />
              <Object Name="GlobalKinematicsDefines" ObjectId="75ee247b-37cf-45b2-a30d-83a68382c334" />
              <Object Name="AxisKinIfMotionProg" ObjectId="5e5ed0bc-429d-46b6-9540-ae2afc37da4b" />
              <Object Name="AxisKinIfPlcProg" ObjectId="b7b6d660-1e12-4fa7-8343-42649de2adc2" />
              <Object Name="DemoAxisCommands" ObjectId="9b101493-9b75-4ed7-a34b-dccbb5cacdc8" />
              <Object Name="DemoBufferedAxisCommands" ObjectId="cde4622a-1947-4659-8697-5254306a4365" />
              <Object Name="DemoKinematicsCommands" ObjectId="a5e687dd-24a9-4edc-a1ae-7def330532ce" />
              <Object Name="Version_AxisKinInterface" ObjectId="eb7854fe-2431-4eea-a135-3b3a6f30b16e" />
            </Folder>
            <Folder Name="DUTs">
              <Object Name="ST_PlcOpenFbs" ObjectId="91228204-eb16-473b-8fe0-800c02ac25d9" />
              <Object Name="ST_SetMotionParam" ObjectId="4ebefe34-98e8-4b46-a015-351f1e587d13" />
              <Object Name="ST_StateMachineInfo" ObjectId="b0bc352a-3795-4e69-ba2c-5318db5e9d2b" />
              <Object Name="ST_RemoteCyclicSetPosition" ObjectId="8a3cf65a-db13-4abf-b4e5-ed6c70bc741b" />
              <Object Name="ST_RemoteCyclicSetPositionIn" ObjectId="7950c277-c170-4290-bc58-d2a229681bd5" />
              <Object Name="ST_RemoteCyclicSetPositionOut" ObjectId="075fe29f-e565-4245-8621-a8fc32c2cd08" />
            </Folder>
            <Folder Name="POUs">
              <Object Name="FB_InitMotionToSetPoint" ObjectId="c8ce17c1-b1e1-4ecd-aa7d-71a9c78b80c4" />
              <Object Name="FB_GenerateProfile" ObjectId="50792f82-5944-4fa1-a456-dca8caa57200" />
              <Object Name="PLC_PRG" ObjectId="29bdd9ae-e739-4b3b-8b60-81b73ce5c0a6" />
              <Object Name="PRG_CyclicSetPoint" ObjectId="1337f422-a28e-48dc-93a7-cdaaa4615d23" />
            </Folder>
            <Folder Name="GVLs">
              <Object Name="GVL_CyclSetPoint" ObjectId="c785d28d-6e9b-46ff-9791-4bb0daeb847a" />
            </Folder>
          </Object>
          <Object Name="Realtime_Data" ObjectId="19f84e2f-c0d6-4735-9eb6-2cddceb104a8" />
        </Object>
      </ProjectStructure>
    </data>
  </addData>
</project>