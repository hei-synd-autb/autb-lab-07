<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="Rexroth" productName="ctrlX PLC Engineering" productVersion="ctrlX PLC 1.16.1" creationDateTime="2024-03-01T12:33:15.3862737" />
  <contentHeader name="Practical Work One" version="0.0" modificationDateTime="2024-03-01T12:32:41.4855458" organization="HEVS" author="Cedric Lenoir">
    <Comment>First Test for Practical Work One</Comment>
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation>
          <property name="Author" type="string">Cedric Lenoir</property>
          <property name="Company" type="string">HEVS</property>
          <property name="Description" type="string">First Test for Practical Work One</property>
          <property name="Project" type="string">PracticalWork_07_Solution</property>
          <property name="Title" type="string">Practical Work One</property>
          <property name="Version" type="version">0.0</property>
        </ProjectInformation>
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes />
    <pous />
  </types>
  <instances>
    <configurations>
      <configuration name="PracticalWork_01">
        <resource name="BaseInterfaceUa">
          <task name="MainTask" interval="PT0.01S" priority="30">
            <pouInstance name="PLC_PRG" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="PRG_MapBox" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="10" IntervalUnit="ms" ExternalEvent="TASK_EXTERNAL_EVENT_01" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="true" Time="200" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>78c08a0f-8c0a-4cae-993a-8ea4cc6c8e72</ObjectId>
              </data>
            </addData>
          </task>
          <task name="MotionTask_2ms" priority="29">
            <pouInstance name="PRG_CyclicSetPoint" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="ExternalEvent" Interval="t#2ms" IntervalUnit="ms" ExternalEvent="TASK_EXTERNAL_EVENT_07" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>5656c2c6-04ae-40c8-bc8a-5f11a25b8a04</ObjectId>
              </data>
            </addData>
          </task>
          <globalVars name="GVL_Abox">
            <variable name="uaAboxInterface">
              <type>
                <derived name="UA_AboxInterface" />
              </type>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                <Attributes>
                  <Attribute Name="qualified_only" Value="" />
                </Attributes>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>31b95c15-5cf4-485c-8394-f9c0ad5586f3</ObjectId>
              </data>
            </addData>
          </globalVars>
          <globalVars name="GVL_AxisDefines">
            <variable name="X_Axis">
              <type>
                <derived name="MB_AXISIF_REF" />
              </type>
              <initialValue>
                <structValue>
                  <value member="AxisName">
                    <simpleValue value="'Axis_1'" />
                  </value>
                  <value member="AxisNo">
                    <simpleValue value="1" />
                  </value>
                </structValue>
              </initialValue>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                <Attributes>
                  <Attribute Name="qualified_only" Value="" />
                </Attributes>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>fbed7d43-1b1d-44ab-b273-bda7af868979</ObjectId>
              </data>
            </addData>
          </globalVars>
          <globalVars name="GVL_CyclSetPoint">
            <variable name="stRemote">
              <type>
                <derived name="ST_RemoteCyclicSetPosition" />
              </type>
              <initialValue>
                <structValue>
                  <value member="in">
                    <structValue>
                      <value member="bEndPosition">
                        <simpleValue value="5" />
                      </value>
                    </structValue>
                  </value>
                </structValue>
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Remote for this program</xhtml>
              </documentation>
            </variable>
            <variable name="arGoToPosition">
              <type>
                <array>
                  <dimension lower="0" upper="c_uiMaxProfilePoints" />
                  <baseType>
                    <LREAL />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> These values are for check only, it is possible to work without buffer</xhtml>
              </documentation>
            </variable>
            <variable name="arReturnFromPosition">
              <type>
                <array>
                  <dimension lower="0" upper="c_uiMaxProfilePoints" />
                  <baseType>
                    <LREAL />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="c_uiMaxProfilePoints">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 1001 points of 2 ms for max 2 [s] motion</xhtml>
              </documentation>
            </variable>
            <variable name="P5">
              <type>
                <array>
                  <dimension lower="1" upper="6" />
                  <baseType>
                    <LREAL />
                  </baseType>
                </array>
              </type>
              <initialValue>
                <arrayValue>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="10" />
                  </value>
                  <value>
                    <simpleValue value="-15" />
                  </value>
                  <value>
                    <simpleValue value="6" />
                  </value>
                </arrayValue>
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> P5 Polynomial P5(0) to P5(5) exp 0 to 5</xhtml>
              </documentation>
            </variable>
            <variable name="MOTION_CYCLE_TIME_ms">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> equal to real time bus</xhtml>
              </documentation>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                <Attributes>
                  <Attribute Name="qualified_only" Value="" />
                </Attributes>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>c785d28d-6e9b-46ff-9791-4bb0daeb847a</ObjectId>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/mixedattrsvarlist" handleUnknown="implementation">
                <MixedAttrsVarList>
                  <globalVars name="GVL_CyclSetPoint">
                    <variable name="stRemote">
                      <type>
                        <derived name="ST_RemoteCyclicSetPosition" />
                      </type>
                      <initialValue>
                        <structValue>
                          <value member="in">
                            <structValue>
                              <value member="bEndPosition">
                                <simpleValue value="5" />
                              </value>
                            </structValue>
                          </value>
                        </structValue>
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Remote for this program</xhtml>
                      </documentation>
                    </variable>
                    <variable name="arGoToPosition">
                      <type>
                        <array>
                          <dimension lower="0" upper="c_uiMaxProfilePoints" />
                          <baseType>
                            <LREAL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> These values are for check only, it is possible to work without buffer</xhtml>
                      </documentation>
                    </variable>
                    <variable name="arReturnFromPosition">
                      <type>
                        <array>
                          <dimension lower="0" upper="c_uiMaxProfilePoints" />
                          <baseType>
                            <LREAL />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                  </globalVars>
                  <globalVars name="GVL_CyclSetPoint" constant="true">
                    <variable name="c_uiMaxProfilePoints">
                      <type>
                        <UDINT />
                      </type>
                      <initialValue>
                        <simpleValue value="1000" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> 1001 points of 2 ms for max 2 [s] motion</xhtml>
                      </documentation>
                    </variable>
                    <variable name="P5">
                      <type>
                        <array>
                          <dimension lower="1" upper="6" />
                          <baseType>
                            <LREAL />
                          </baseType>
                        </array>
                      </type>
                      <initialValue>
                        <arrayValue>
                          <value>
                            <simpleValue value="0" />
                          </value>
                          <value>
                            <simpleValue value="0" />
                          </value>
                          <value>
                            <simpleValue value="0" />
                          </value>
                          <value>
                            <simpleValue value="10" />
                          </value>
                          <value>
                            <simpleValue value="-15" />
                          </value>
                          <value>
                            <simpleValue value="6" />
                          </value>
                        </arrayValue>
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> P5 Polynomial P5(0) to P5(5) exp 0 to 5</xhtml>
                      </documentation>
                    </variable>
                    <variable name="MOTION_CYCLE_TIME_ms">
                      <type>
                        <UDINT />
                      </type>
                      <initialValue>
                        <simpleValue value="2" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> equal to real time bus</xhtml>
                      </documentation>
                    </variable>
                  </globalVars>
                </MixedAttrsVarList>
              </data>
            </addData>
          </globalVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_DigitalInput_32">
                <baseType>
                  <struct>
                    <variable name="Input_0_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_0_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_0_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_0_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_0_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_0_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_0_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_0_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_1_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_1_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_1_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_1_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_1_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_1_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_1_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_1_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_2_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_2_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_2_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_2_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_2_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_2_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_2_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_2_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_3_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_3_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_3_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_3_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_3_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_3_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_3_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_3_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>a8f884db-ac4f-40d0-bcab-8badc6587dcc</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_DigitalOutput_32">
                <baseType>
                  <struct>
                    <variable name="Output_0_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_0_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_0_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_0_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_0_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_0_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_0_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_0_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_1_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_1_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_1_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_1_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_1_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_1_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_1_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_1_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_2_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_2_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_2_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_2_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_2_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_2_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_2_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_2_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_3_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_3_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_3_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_3_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_3_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_3_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_3_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_3_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>7b52e73f-21ed-4643-ae78-7cbc7194e35a</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_ButtonAndSignal">
                <baseType>
                  <struct>
                    <variable name="In_Estop">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="In_Reset">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="In_Start">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="In_Stop">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Out_Idle">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Out_Execute">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Out_Stopped">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b3f9a3b5-82f9-447e-a261-cb2d18ffb6eb</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_O300_DL">
                <baseType>
                  <struct>
                    <variable name="Value">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="BCD1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Q">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="A">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>6026491a-5615-4c42-b2f8-5562044ffab5</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_O300_ZL">
                <baseType>
                  <struct>
                    <variable name="BCD1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Q">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="A">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>0292b894-9834-4595-b44c-87810191b2ca</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_U300_D50">
                <baseType>
                  <struct>
                    <variable name="Value">
                      <type>
                        <DWORD />
                      </type>
                    </variable>
                    <variable name="Scale">
                      <type>
                        <SINT />
                      </type>
                    </variable>
                    <variable name="SSC1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="SSC2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Q">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="A">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="SSC4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9f70432a-c970-455e-a9e2-baa1b526f168</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_PlcOpenFbs">
                <baseType>
                  <struct>
                    <variable name="bEnableRemote">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> If TRUE, the FB are driven manually from the HMI</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bEnableReadStatus">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bEnableReadPosition">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bEnableReadVelocity">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bMoveAbs">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bStop">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bPowerOn">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bReset">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="strGetAxisStatus">
                      <type>
                        <string />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> From arAxisStatus_gb[1].Data.PLCopenState;
 Exist in Data Layer too, s=motion/axs/Axis_X/state/opstate/plcopen</xhtml>
                      </documentation>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>91228204-eb16-473b-8fe0-800c02ac25d9</ObjectId>
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Projet No: PW Move Absolute
	Author:		Cedric Lenoir
	Date:		2023 October 16
	
	Summary:	List of commands for MoveAbsolute
</xhtml>
                </documentation>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_U300_P50">
                <baseType>
                  <struct>
                    <variable name="Value">
                      <type>
                        <DWORD />
                      </type>
                    </variable>
                    <variable name="Scale">
                      <type>
                        <SINT />
                      </type>
                    </variable>
                    <variable name="SSC1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="SSC2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Q">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="A">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="SSC4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>7f0e2eb1-ba19-4d1b-be94-9623d8b4ba56</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_Schunk_mms">
                <baseType>
                  <struct>
                    <variable name="Value">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>e1630ce8-bc96-43e5-9e0c-58c82b66b1bc</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_Balluf_bcm0002">
                <baseType>
                  <struct>
                    <variable name="Data_1">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="Data_2">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="Data_3">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="Temperature">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="Status">
                      <type>
                        <DWORD />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>6fac8e51-2212-48d9-b853-8070ad243c78</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_Festo">
                <baseType>
                  <struct>
                    <variable name="SetOut">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>634e16b1-da38-4e2b-b9e1-42ee4bdb38cc</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_AnalogIn">
                <baseType>
                  <struct>
                    <variable name="IW_04">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="IW_06">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="IW_08">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="IW_10">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="IW_12">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="IW_14">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="IW_16">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="IW_18">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9609e6b4-7275-4343-861c-fef510482801</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_AnalogOut">
                <baseType>
                  <struct>
                    <variable name="QW_04">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="QW_06">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="QW_08">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="QW_10">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c2ad5a14-bba9-482f-9eb2-2a91ac4fe72c</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_AboxInterface">
                <baseType>
                  <struct>
                    <variable name="uaButtonAndSignal">
                      <type>
                        <derived name="UA_ButtonAndSignal" />
                      </type>
                    </variable>
                    <variable name="uaAnalogIn">
                      <type>
                        <derived name="UA_AnalogIn" />
                      </type>
                    </variable>
                    <variable name="uaAnalogOut">
                      <type>
                        <derived name="UA_AnalogOut" />
                      </type>
                    </variable>
                    <variable name="uaDigitalIn">
                      <type>
                        <derived name="UA_DigitalInput_32" />
                      </type>
                    </variable>
                    <variable name="uaDigitalOut">
                      <type>
                        <derived name="UA_DigitalOutput_32" />
                      </type>
                    </variable>
                    <variable name="uaO300_DL_Optic">
                      <type>
                        <derived name="UA_O300_DL" />
                      </type>
                    </variable>
                    <variable name="uaO300_ZL_Optic">
                      <type>
                        <derived name="UA_O300_ZL" />
                      </type>
                    </variable>
                    <variable name="uaU300_D50_Sound">
                      <type>
                        <derived name="UA_U300_D50" />
                      </type>
                    </variable>
                    <variable name="uaU300_P50_Sound">
                      <type>
                        <derived name="UA_U300_P50" />
                      </type>
                    </variable>
                    <variable name="uaSchunk">
                      <type>
                        <derived name="UA_Schunk_mms" />
                      </type>
                    </variable>
                    <variable name="uaSchunkGripper">
                      <type>
                        <derived name="UA_Festo" />
                      </type>
                    </variable>
                    <variable name="uaAccelerometer">
                      <type>
                        <derived name="UA_Balluf_bcm0002" />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>03a0b2ac-89d3-4829-82ce-c9ce9256e8f7</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_SetMotionParam">
                <baseType>
                  <struct>
                    <variable name="rPosition_mm">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="rVeloctiy_mm_s">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="rAcceleration_mm_s2">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="rDeceleration_mm_s2">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="rJerk_mm_s3">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>4ebefe34-98e8-4b46-a015-351f1e587d13</ObjectId>
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Projet No: PW Move Absolute
	Author:		Cedric Lenoir
	Date:		2023 October 16
	
	Summary:	List of dynamic parameters for Move Absolute
</xhtml>
                </documentation>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_StateMachineInfo">
                <baseType>
                  <struct>
                    <variable name="diState">
                      <type>
                        <DINT />
                      </type>
                    </variable>
                    <variable name="eState">
                      <type>
                        <derived name="EN_MoveAbsStates" />
                      </type>
                    </variable>
                    <variable name="eStateNm1">
                      <type>
                        <derived name="EN_MoveAbsStates" />
                      </type>
                    </variable>
                    <variable name="eStateMem">
                      <type>
                        <derived name="EN_MoveAbsStates" />
                      </type>
                    </variable>
                    <variable name="bIdle">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bActive">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bError">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="strState">
                      <type>
                        <string />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b0bc352a-3795-4e69-ba2c-5318db5e9d2b</ObjectId>
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Projet No: PW Move Absolute
	Author:		Cedric Lenoir
	Date:		2023 October 16
	
	Summary:	State Machine Info      
</xhtml>
                </documentation>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_RemoteCyclicSetPosition">
                <baseType>
                  <struct>
                    <variable name="in">
                      <type>
                        <derived name="ST_RemoteCyclicSetPositionIn" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Commands for program</xhtml>
                      </documentation>
                    </variable>
                    <variable name="out">
                      <type>
                        <derived name="ST_RemoteCyclicSetPositionOut" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Status for program    </xhtml>
                      </documentation>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>8a3cf65a-db13-4abf-b4e5-ed6c70bc741b</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_RemoteCyclicSetPositionIn">
                <baseType>
                  <struct>
                    <variable name="bInit">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Init axis position with Move Absolute</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bStop">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Stop Absolute motion      </xhtml>
                      </documentation>
                    </variable>
                    <variable name="bInitPosition">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Set init position / Start of profile position</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bEndPosition">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Set end position / End of profile position</xhtml>
                      </documentation>
                    </variable>
                    <variable name="udiCycleTimeMultiplier">
                      <type>
                        <UDINT />
                      </type>
                      <initialValue>
                        <simpleValue value="1000" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Cycle Time Multiplier, default is 1000 for 1000 ms</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bActivateCoupling">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Activate coupling, when TRUE, axis position is set by fbGenerateProfile
 with 5th order polynomial</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bStartForward">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Start polynomial profile forward</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bStartBackward">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Start polynomial profile backward</xhtml>
                      </documentation>
                    </variable>
                    <variable name="lrProfileSetPosition">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Set Position from Profile generator</xhtml>
                      </documentation>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>7950c277-c170-4290-bc58-d2a229681bd5</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_RemoteCyclicSetPositionOut">
                <baseType>
                  <struct>
                    <variable name="bInitDone">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Init done, ready for cyclic motion    </xhtml>
                      </documentation>
                    </variable>
                    <variable name="bError">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> There is an error</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bFwdDone">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> End of cyclic profile Forward</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bBackDone">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> End of cyclic profile Back</xhtml>
                      </documentation>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>075fe29f-e565-4245-8621-a8fc32c2cd08</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="PRG_MapBox" pouType="program">
                <interface>
                  <localVars>
                    <variable name="UA_ReadCounterFromStation">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
	Write from Siemens to ctrX Core

 Used to check if read is running</xhtml>
                      </documentation>
                    </variable>
                    <variable name="UA_ButtonAndSignal_In_Estop">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_ButtonAndSignal_In_Reset">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_ButtonAndSignal_In_Start">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_ButtonAndSignal_In_Stop">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_Balluf_bcm0002_Data_1">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="UA_Balluf_bcm0002_Data_2">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="UA_Balluf_bcm0002_Data_3">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="UA_Balluf_bcm0002_Temperature">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="UA_Balluf_bcm0002_Status">
                      <type>
                        <DWORD />
                      </type>
                    </variable>
                    <variable name="UA_Festo_SetOut">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_O300_DL_Value">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="UA_O300_DL_BCD1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_O300_DL_Q">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_O300_DL_A">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_O300_ZL_BCD1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_O300_ZL_Q">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_O300_ZL_A">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_D50_Value">
                      <type>
                        <DWORD />
                      </type>
                    </variable>
                    <variable name="UA_U300_D50_Scale">
                      <type>
                        <SINT />
                      </type>
                    </variable>
                    <variable name="UA_U300_D50_SSC1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_D50_SSC2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_D50_Q">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_D50_A">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_D50_SSC4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_P50_Value">
                      <type>
                        <DWORD />
                      </type>
                    </variable>
                    <variable name="UA_U300_P50_Scale">
                      <type>
                        <SINT />
                      </type>
                    </variable>
                    <variable name="UA_U300_P50_SSC1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_P50_SSC2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_P50_Q">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_P50_A">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_P50_SSC4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_0_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_0_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_0_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_0_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_0_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_0_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_0_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_0_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_1_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_1_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_1_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_1_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_1_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_1_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_1_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_1_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_2_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_2_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_2_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_2_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_2_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_2_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_2_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_2_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_3_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_3_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_3_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_3_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_3_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_3_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_3_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_3_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_WriteCounterToStation">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
	Siemens Read from ctrX Core

 Used to check if write is running</xhtml>
                      </documentation>
                    </variable>
                    <variable name="UA_ButtonAndSignal_Out_Idle">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_ButtonAndSignal_Out_Execute">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_ButtonAndSignal_Out_Stopped">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_Schunk_mms_Value">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_0_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_0_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_0_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_0_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_0_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_0_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_0_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_0_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_1_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_1_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_1_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_1_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_1_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_1_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_1_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_1_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_2_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_2_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_2_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_2_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_2_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_2_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_2_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_2_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_3_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_3_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_3_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_3_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_3_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_3_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_3_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_3_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">    (*
        Values from Profinet Station
    *)
    
    // Get Value from Profinet Station with UA Client Write
	GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Estop     := UA_ButtonAndSignal_In_Estop;
	GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Reset     := UA_ButtonAndSignal_In_Reset;
	GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Start     := UA_ButtonAndSignal_In_Start;
	GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Stop      := UA_ButtonAndSignal_In_Stop;
    // Values from Balluff accelerometer
    GVL_Abox.uaAboxInterface.uaAccelerometer.Data_1         := UA_Balluf_bcm0002_Data_1;
    GVL_Abox.uaAboxInterface.uaAccelerometer.Data_2         := UA_Balluf_bcm0002_Data_1;
    GVL_Abox.uaAboxInterface.uaAccelerometer.Data_3         := UA_Balluf_bcm0002_Data_1;
    GVL_Abox.uaAboxInterface.uaAccelerometer.Status         := UA_Balluf_bcm0002_Status;
    GVL_Abox.uaAboxInterface.uaAccelerometer.Temperature    := UA_Balluf_bcm0002_Temperature;

    // Values from Baumer O300 DL
    GVL_Abox.uaAboxInterface.uaO300_DL_Optic.Value          := UA_O300_DL_Value;                
    GVL_Abox.uaAboxInterface.uaO300_DL_Optic.A              := UA_O300_DL_A;                
    GVL_Abox.uaAboxInterface.uaO300_DL_Optic.Q              := UA_O300_DL_Q;                
    GVL_Abox.uaAboxInterface.uaO300_DL_Optic.BCD1           := UA_O300_DL_BCD1;                

    // Values from Baumer O300 ZL                
    GVL_Abox.uaAboxInterface.uaO300_ZL_Optic.A              := UA_O300_ZL_A;                
    GVL_Abox.uaAboxInterface.uaO300_ZL_Optic.Q              := UA_O300_ZL_Q;                
    GVL_Abox.uaAboxInterface.uaO300_ZL_Optic.BCD1           := UA_O300_ZL_BCD1;                

    // Values from Baumer U300 D50
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.Value         := UA_U300_D50_Value;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.A             := UA_U300_D50_A;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.Q             := UA_U300_D50_Q;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.Scale         := UA_U300_D50_Scale;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.SSC1          := UA_U300_D50_SSC1;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.SSC2          := UA_U300_D50_SSC2;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.SSC4          := UA_U300_D50_SSC4;  
    
    // Values from Baumer U300 P50
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.Value         := UA_U300_P50_Value;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.A             := UA_U300_P50_A;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.Q             := UA_U300_P50_Q;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.Scale         := UA_U300_P50_Scale;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.SSC1          := UA_U300_P50_SSC1;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.SSC2          := UA_U300_P50_SSC2;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.SSC4          := UA_U300_P50_SSC4;  
    
    // Values from Gripper sensor
    GVL_Abox.uaAboxInterface.uaSchunk.Value                 := UA_Schunk_mms_Value;  
    
    // Get 32 Digital Input
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_0          := UA_DigitalInput_32_Input_0_0;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_1          := UA_DigitalInput_32_Input_0_1;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_2          := UA_DigitalInput_32_Input_0_2;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_3          := UA_DigitalInput_32_Input_0_3;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_4          := UA_DigitalInput_32_Input_0_4;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_5          := UA_DigitalInput_32_Input_0_5;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_6          := UA_DigitalInput_32_Input_0_6;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_7          := UA_DigitalInput_32_Input_0_7;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_0          := UA_DigitalInput_32_Input_1_0;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_1          := UA_DigitalInput_32_Input_1_1;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_2          := UA_DigitalInput_32_Input_1_2;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_3          := UA_DigitalInput_32_Input_1_3;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_4          := UA_DigitalInput_32_Input_1_4;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_5          := UA_DigitalInput_32_Input_1_5;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_6          := UA_DigitalInput_32_Input_1_6;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_7          := UA_DigitalInput_32_Input_1_7;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_0          := UA_DigitalInput_32_Input_2_0;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_1          := UA_DigitalInput_32_Input_2_1;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_2          := UA_DigitalInput_32_Input_2_2;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_3          := UA_DigitalInput_32_Input_2_3;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_4          := UA_DigitalInput_32_Input_2_4;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_5          := UA_DigitalInput_32_Input_2_5;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_6          := UA_DigitalInput_32_Input_2_6;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_7          := UA_DigitalInput_32_Input_2_7;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_0          := UA_DigitalInput_32_Input_3_0;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_1          := UA_DigitalInput_32_Input_3_1;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_2          := UA_DigitalInput_32_Input_3_2;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_3          := UA_DigitalInput_32_Input_3_3;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_4          := UA_DigitalInput_32_Input_3_4;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_5          := UA_DigitalInput_32_Input_3_5;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_6          := UA_DigitalInput_32_Input_3_6;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_7          := UA_DigitalInput_32_Input_3_7;
    
    (*
        Values to Profinet Station
    *)
	UA_WriteCounterToStation := UA_WriteCounterToStation + 1;

    // Set Visual Signals
	UA_ButtonAndSignal_Out_Execute 	:= GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Execute;
	UA_ButtonAndSignal_Out_Idle 	:= GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Idle;
	UA_ButtonAndSignal_Out_Stopped	:= GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Stopped;
    
    // Set Gripper value
    UA_Festo_SetOut                 := GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut;
    
    // Set 32 digital outputs
    UA_DigitalOutput_32_Output_0_0  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_0;
    UA_DigitalOutput_32_Output_0_1  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_1;
    UA_DigitalOutput_32_Output_0_2  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_2;
    UA_DigitalOutput_32_Output_0_3  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_3;
    UA_DigitalOutput_32_Output_0_4  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_4;
    UA_DigitalOutput_32_Output_0_5  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_5;
    UA_DigitalOutput_32_Output_0_6  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_6;
    UA_DigitalOutput_32_Output_0_7  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_7;
    UA_DigitalOutput_32_Output_1_0  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_0;
    UA_DigitalOutput_32_Output_1_1  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_1;
    UA_DigitalOutput_32_Output_1_2  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_2;
    UA_DigitalOutput_32_Output_1_3  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_3;
    UA_DigitalOutput_32_Output_1_4  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_4;
    UA_DigitalOutput_32_Output_1_5  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_5;
    UA_DigitalOutput_32_Output_1_6  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_6;
    UA_DigitalOutput_32_Output_1_7  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_7;
    UA_DigitalOutput_32_Output_2_0  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_0;
    UA_DigitalOutput_32_Output_2_1  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_1;
    UA_DigitalOutput_32_Output_2_2  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_2;
    UA_DigitalOutput_32_Output_2_3  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_3;
    UA_DigitalOutput_32_Output_2_4  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_4;
    UA_DigitalOutput_32_Output_2_5  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_5;
    UA_DigitalOutput_32_Output_2_6  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_6;
    UA_DigitalOutput_32_Output_2_7  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_7;
    UA_DigitalOutput_32_Output_3_0  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_0;
    UA_DigitalOutput_32_Output_3_1  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_1;
    UA_DigitalOutput_32_Output_3_2  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_2;
    UA_DigitalOutput_32_Output_3_3  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_3;
    UA_DigitalOutput_32_Output_3_4  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_4;
    UA_DigitalOutput_32_Output_3_5  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_5;
    UA_DigitalOutput_32_Output_3_6  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_6;
    UA_DigitalOutput_32_Output_3_7  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_7;
    
PRG_CHECK_IO();</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>81a742c1-f168-4201-931a-c5044bbbda80</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="PRG_CHECK_IO" pouType="program">
                <interface>
                  <localVars>
                    <variable name="testButton_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="testButton_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="testButton_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="clignote">
                      <type>
                        <derived name="TON" />
                      </type>
                    </variable>
                    <variable name="changeMeSlow">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="clignoteSlow">
                      <type>
                        <derived name="TON" />
                      </type>
                    </variable>
                    <variable name="changeMe">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="NotResetTest">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">testButton_1 := GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Reset;
testButton_2 := GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Start;
testButton_3 := GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Stop;

IF GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Reset AND
   NotResetTest										   THEN
	NotResetTest := FALSE;
	
    GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut := FALSE;
    
    GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Execute := FALSE;	
    GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Idle := FALSE;	
    GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Stopped := FALSE;	

    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_0 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_1 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_2 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_3 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_4 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_5 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_6 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_7 := FALSE;
    
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_0 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_1 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_2 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_3 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_4 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_5 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_6 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_7 := FALSE;
    
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_0 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_1 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_2 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_3 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_4 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_5 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_6 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_7 := FALSE;

    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_0 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_1 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_2 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_3 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_4 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_5 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_6 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_7 := FALSE;	
END_IF

IF GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Reset AND
   GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Start AND
   GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Stop  THEN
	NotResetTest := TRUE;
END_IF


IF NotResetTest THEN 
	
	// Quick Blink
	clignote(IN := changeMe,
			 PT := T#500MS);
			 
	IF clignote.Q THEN
		changeMe := FALSE;
	ELSE
		changeMe := TRUE;
	END_IF

	// Slow Blink
	clignoteSlow(IN := changeMeSlow,
			 	 PT := T#2500MS);
			 
	IF clignoteSlow.Q THEN
		changeMeSlow := FALSE;
	ELSE
		changeMeSlow := TRUE;
	END_IF
	
	IF (NOT GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut) AND clignoteSlow.Q THEN
		GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut := TRUE;
	ELSIF GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut AND clignoteSlow.Q THEN
		GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut := FALSE;
	END_IF
	
	IF (NOT GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_0) AND clignote.Q THEN
		GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Execute := TRUE;	
		GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Idle := TRUE;	
		GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Stopped := TRUE;	
	
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_0 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_1 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_2 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_3 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_4 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_5 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_6 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_7 := TRUE;
		
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_0 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_1 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_2 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_3 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_4 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_5 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_6 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_7 := TRUE;
		
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_0 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_1 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_2 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_3 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_4 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_5 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_6 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_7 := TRUE;

		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_0 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_1 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_2 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_3 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_4 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_5 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_6 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_7 := TRUE;
	ELSIF GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_0 AND clignote.Q THEN
		GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Execute := FALSE;	
		GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Idle := FALSE;	
		GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Stopped := FALSE;	

		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_0 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_1 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_2 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_3 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_4 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_5 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_6 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_7 := FALSE;
		
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_0 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_1 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_2 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_3 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_4 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_5 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_6 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_7 := FALSE;
		
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_0 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_1 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_2 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_3 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_4 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_5 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_6 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_7 := FALSE;

		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_0 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_1 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_2 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_3 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_4 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_5 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_6 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_7 := FALSE;
	END_IF;
END_IF</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>d5610066-b322-4d3c-a26d-47ad8b18dbd0</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="FB_GenerateProfile" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="bStartForward">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Start of motion at rising edge.</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bStartBackward">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="startPosition_mm">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Should be 0 for first version, could be extended for any position</xhtml>
                      </documentation>
                    </variable>
                    <variable name="endPosition_mm">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Should be limited to 100 mm</xhtml>
                      </documentation>
                    </variable>
                    <variable name="udiCyclTime_ms">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Cycle time in ms of the task where FB is running.</xhtml>
                      </documentation>
                    </variable>
                    <variable name="udiCycleTimeMult">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Cycle time multiplier, used to compute duration of motion
 This could be made automatically later,
 Now result in Output</xhtml>
                      </documentation>
                    </variable>
                  </inputVars>
                  <inOutVars>
                    <variable name="arGoToPos">
                      <type>
                        <array>
                          <dimension lower="0" upper="GVL_CyclSetPoint.c_uiMaxProfilePoints" />
                          <baseType>
                            <LREAL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used for verification of data, we do not nead them for motion</xhtml>
                      </documentation>
                    </variable>
                    <variable name="arReturnFromPos">
                      <type>
                        <array>
                          <dimension lower="0" upper="GVL_CyclSetPoint.c_uiMaxProfilePoints" />
                          <baseType>
                            <LREAL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used for verification of data, we do not nead them for motion</xhtml>
                      </documentation>
                    </variable>
                  </inOutVars>
                  <outputVars>
                    <variable name="udiMotionTime_ms">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Is time to execute the profile in ms
 Multiplication of udiCyclTime_ms x udiCycleTimeMult</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bDoneForward">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Motion finished</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bDoneBackward">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="lrSetPosition">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Motion set position</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bErrorTimeMultToBig">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> True if udiCycleTimeMult Exceeds, FB not executed</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bActive">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Point generator active</xhtml>
                      </documentation>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="discreteTimeIndex">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Time index of position</xhtml>
                      </documentation>
                    </variable>
                    <variable name="rStartForward">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> rising edge of start</xhtml>
                      </documentation>
                    </variable>
                    <variable name="rStartBackward">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="lrTimeScaler">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Ce machin là va devoir être expliqué avec pas mal de détail en théorie.</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">rStartForward(clk := bStartForward);
rStartBackward(clk := bStartBackward);


udiMotionTime_ms := udiCyclTime_ms * udiCycleTimeMult;

IF udiCycleTimeMult &gt; GVL_CyclSetPoint.c_uiMaxProfilePoints THEN
    bErrorTimeMultToBig := TRUE;
    bActive := FALSE;
    bDoneForward := FALSE;
    bDoneBackward := FALSE;
ELSE
    IF bStartForward THEN
        // Init motion
        IF rStartForward.Q THEN
            lrSetPosition := startPosition_mm;
            discreteTimeIndex := 0; 
            lrTimeScaler := 1/UDINT_TO_LREAL(udiCycleTimeMult);
            bActive := TRUE;
            bDoneForward := FALSE;
        END_IF // rStartForward.Q
        
        IF NOT bDoneForward THEN
            // Matlab operation with some modifications : 
            // position_yAxis(iLoop) = (t_xAxis(iLoop)^3 * P5_position(4) + t_xAxis(iLoop)^4 * P5_position(5) + t_xAxis(iLoop)^5 * P5_position(6)) * y_scaling_mm;
            arGoToPos[discreteTimeIndex] := startPosition_mm                                                 + 
											(EXPT(lrTimeScaler*discreteTimeIndex,3) * GVL_CyclSetPoint.P5[4] +
                                             EXPT(lrTimeScaler*discreteTimeIndex,4) * GVL_CyclSetPoint.P5[5] +
                                             EXPT(lrTimeScaler*discreteTimeIndex,5) * GVL_CyclSetPoint.P5[6]) * (endPosition_mm - startPosition_mm);
            // Set new value
            lrSetPosition := arGoToPos[discreteTimeIndex];
            // inc at each cycle
            discreteTimeIndex := discreteTimeIndex + 1;
            IF discreteTimeIndex &gt; udiCycleTimeMult THEN
                bDoneForward := TRUE;
            END_IF // discreteTimeIndex &gt; udiCycleTimeMult
        END_IF // IF bDoneForward 
    END_IF    

    IF bStartBackward THEN
        // Init motion
        IF rStartBackward.Q THEN
            lrSetPosition := startPosition_mm;
            discreteTimeIndex := 0; 
            lrTimeScaler := 1/UDINT_TO_LREAL(udiCycleTimeMult);
            bActive := TRUE;
            bDoneBackward := FALSE;
        END_IF // rStartForward.Q
        
        IF NOT bDoneBackward THEN
            // Matlab operation with some modifications : 
            // position_yAxisBack(iLoop) = y_scaling_mm - (t_xAxis(iLoop)^3 * P5_position(4) + t_xAxis(iLoop)^4 * P5_position(5) + t_xAxis(iLoop)^5 * P5_position(6)) * y_scaling_mm;
            arReturnFromPos[discreteTimeIndex] := endPosition_mm - (EXPT(lrTimeScaler*discreteTimeIndex,3) * GVL_CyclSetPoint.P5[4] +
                                                                    EXPT(lrTimeScaler*discreteTimeIndex,4) * GVL_CyclSetPoint.P5[5] +
                                                                    EXPT(lrTimeScaler*discreteTimeIndex,5) * GVL_CyclSetPoint.P5[6]) * (endPosition_mm - startPosition_mm);
            // Set new value
            lrSetPosition := arReturnFromPos[discreteTimeIndex];
            // inc at each cycle
            discreteTimeIndex := discreteTimeIndex + 1;
            IF discreteTimeIndex &gt; udiCycleTimeMult THEN
                bDoneBackward := TRUE;
            END_IF // discreteTimeIndex &gt; udiCycleTimeMult
        END_IF // IF bDoneBackward 
    END_IF    

END_IF
</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>50792f82-5944-4fa1-a456-dca8caa57200</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="FB_InitMotionToSetPoint" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="bInit">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Condition from Idle to start the init state machine
 Init at rising edge</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bStop">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bInitPosition">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Position to reach at the end of init.    </xhtml>
                      </documentation>
                    </variable>
                  </inputVars>
                  <inOutVars>
                    <variable name="stPlcOpenThisFb">
                      <type>
                        <derived name="ST_PlcOpenFbs" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Access for manual oprations on PLCopen FB of THIS FB</xhtml>
                      </documentation>
                    </variable>
                    <variable name="stSetDynamicParams">
                      <type>
                        <derived name="ST_SetMotionParam" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Contains dynamic parameters for MC_MoveAbsolute of THIS FB
 Default parameters from IN_OUT</xhtml>
                      </documentation>
                    </variable>
                  </inOutVars>
                  <outputVars>
                    <variable name="bInitDone">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bError">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="uliMyLoop">
                      <type>
                        <ULINT />
                      </type>
                    </variable>
                    <variable name="bInitOnce">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="stStateMachineInfo">
                      <type>
                        <derived name="ST_StateMachineInfo" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
        List of Structures
    
 Internal state machine of THIS FB</xhtml>
                      </documentation>
                    </variable>
                    <variable name="mcReadActualPosition">
                      <type>
                        <derived name="MC_ReadActualPosition" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
        List of Function Blocks
    </xhtml>
                      </documentation>
                    </variable>
                    <variable name="mcReadActualVelocity">
                      <type>
                        <derived name="MC_ReadActualVelocity" />
                      </type>
                    </variable>
                    <variable name="mcReadStatus">
                      <type>
                        <derived name="MC_ReadStatus" />
                      </type>
                    </variable>
                    <variable name="mcPower">
                      <type>
                        <derived name="MC_Power" />
                      </type>
                    </variable>
                    <variable name="mcMoveAbsolute">
                      <type>
                        <derived name="MC_MoveAbsolute" />
                      </type>
                    </variable>
                    <variable name="mcStop">
                      <type>
                        <derived name="MC_Stop" />
                      </type>
                      <initialValue>
                        <structValue>
                          <value member="Deceleration">
                            <simpleValue value="1" />
                          </value>
                        </structValue>
                      </initialValue>
                    </variable>
                    <variable name="mcReset">
                      <type>
                        <derived name="MC_Reset" />
                      </type>
                    </variable>
                    <variable name="uiGetIndexFromName">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="1" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
        General values
    </xhtml>
                      </documentation>
                    </variable>
                    <variable name="rTrigInit">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used for init or reset from Error Stop</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">uliMyLoop := uliMyLoop + 1;
(*
    Some inits independant of the Main State Machine
*)
IF NOT bInitOnce THEN
    bInitOnce := TRUE;
    stPlcOpenThisFb.bEnableReadStatus := TRUE;
    stPlcOpenThisFb.bEnableReadPosition := TRUE;
    stPlcOpenThisFb.bEnableReadVelocity := TRUE;
END_IF

(*
    Remote conditions
    
    Note:
        Ideally, with a real machine, code should avoid entering remote mode (manual)
        if some conditions, like "standstill" are not fullfilled.
        this is for next semester... in advanced automation.
*)
IF stPlcOpenThisFb.bEnableRemote THEN
    // In case of remote, reset state machine.
    stStateMachineInfo.eState := EN_MoveAbsStates.eIdle;
    // Auto reset of mcMoveAbsolute execute to simplify commands from HMI.
    IF mcMoveAbsolute.Done THEN
        stPlcOpenThisFb.bMoveAbs := FALSE;
    END_IF
    // Auto reset of mcStop execute to simplify commands from HMI.
    IF mcStop.Done THEN
        stPlcOpenThisFb.bStop := FALSE;
        stPlcOpenThisFb.bMoveAbs := FALSE;
    END_IF
    // Direct access to FB if femote active.
    mcPower.Enable := stPlcOpenThisFb.bPowerOn;
    mcMoveAbsolute.Execute := stPlcOpenThisFb.bMoveAbs; 
    mcStop.Execute := stPlcOpenThisFb.bStop;
    mcReset.Execute := stPlcOpenThisFb.bReset;
END_IF

(*
    Main State Machine.
*)
rTrigInit(CLK := bInit);

CASE stStateMachineInfo.eState OF
    EN_MoveAbsStates.eIdle :
        stStateMachineInfo.strState := 'Idle';
        IF mcReadStatus.ErrorStop THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eErrorStop;    
        ELSIF rTrigInit.Q                 AND
           mcReadStatus.Disabled          AND 
           NOT stPlcOpenThisFb.bEnableRemote THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eIsPowerOff;
        END_IF
    EN_MoveAbsStates.eIsPowerOff :
        stStateMachineInfo.strState := 'Is Power Off';
        IF NOT mcReadStatus.Error THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eWaitPowerOn;
        ELSE
            stStateMachineInfo.eState := EN_MoveAbsStates.eErrorStop;
        END_IF
    EN_MoveAbsStates.eWaitPowerOn :
        stStateMachineInfo.strState := 'Wait for Power On';
        IF mcReadStatus.Standstill THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eIsPowerOn;
        ELSIF mcReadStatus.ErrorStop THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eErrorStop;
        END_IF
    EN_MoveAbsStates.eIsPowerOn :
        stStateMachineInfo.strState := 'Is Power On';
        IF NOT mcReadStatus.Error THEN
            stSetDynamicParams.rPosition_mm := bInitPosition;
            stStateMachineInfo.eState := EN_MoveAbsStates.eInitMotion;
        ELSE
            stStateMachineInfo.eState := EN_MoveAbsStates.eErrorStop;
        END_IF
    EN_MoveAbsStates.eInitMotion :
        stStateMachineInfo.strState := 'Motion Init active';
        IF mcMoveAbsolute.Done THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eInitMotionDone;
        ELSIF bStop THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eStopping;
        ELSIF mcReadStatus.ErrorStop THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eErrorStop;
        END_IF
    EN_MoveAbsStates.eInitMotionDone :
        stStateMachineInfo.strState := 'Motion Init done';
        IF mcReadStatus.ErrorStop THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eErrorStop;
        ELSIF rTrigInit.Q THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eIsPowerOn;
        END_IF
    EN_MoveAbsStates.eStopping :
        stStateMachineInfo.strState := 'Stopping active';
        (*
            PLCopen motion control part 1 says:
            Standstill (eIsPowerOn) if
            MC_Stop.Done = TRUE AND MC_Stop.Execute = FALSE
        *)
        IF mcStop.Done AND
           NOT bStop   THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eIsPowerOn;
        ELSIF mcReadStatus.ErrorStop THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eErrorStop;
        END_IF
    EN_MoveAbsStates.eMoveDown :
        stStateMachineInfo.strState := 'Move Down active';
        // not used 
        ;
    EN_MoveAbsStates.eMoveDownDone :
        stStateMachineInfo.strState := 'Move Down done';
        // not used 
        ;
    EN_MoveAbsStates.eCloseGripper :
        stStateMachineInfo.strState := 'Close Gripper active';
        // not used 
        ;
    EN_MoveAbsStates.eGripperClosed :
        stStateMachineInfo.strState := 'Close Gripper done';
        // not used 
        ;
    
    EN_MoveAbsStates.eReset :
        (*
            PLCopen motion control part 1 says:
            Standstill (eIsPowerOn) if:
                MC_Reset AND MC_Power.Status = TRUE AND MC_Power.Enable = TRUE
            Disabled (eIsPowerOff) if:
                MC_Reset AND MC_Power.Status = FALSE
        *)
        IF mcReset.Done   AND
           mcPower.Status AND
           mcPower.Enable THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eIsPowerOn;
        ELSIF mcReset.Done       AND
              NOT mcPower.Status THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eIsPowerOff;
        END_IF

    EN_MoveAbsStates.eErrorStop :
        stStateMachineInfo.strState := 'Is in Error Stop';
        IF rTrigInit.Q THEN
            stStateMachineInfo.eState := EN_MoveAbsStates.eReset;
        END_IF        
END_CASE
(*
    Store last active state, State at time N-1
*)
IF stStateMachineInfo.eState &lt;&gt; stStateMachineInfo.eStateMem THEN
    stStateMachineInfo.eStateNm1 := stStateMachineInfo.eStateMem;    
END_IF
stStateMachineInfo.eStateMem := stStateMachineInfo.eState;
(*
    Get state machine in a DINT format
*)
stStateMachineInfo.diState := stStateMachineInfo.eState;
(*
    Error state depends only of the state machine in combinational logic.
    That is, some Booleans are defined solely based on a combination of states.
*) 
stStateMachineInfo.bIdle := stStateMachineInfo.eState = EN_MoveAbsStates.eIdle;
stStateMachineInfo.bError := stStateMachineInfo.eState = EN_MoveAbsStates.eErrorStop;
stStateMachineInfo.bActive := NOT (stStateMachineInfo.eState = EN_MoveAbsStates.eIdle) AND
                              NOT (stStateMachineInfo.eState = EN_MoveAbsStates.eErrorStop);


(*
    Call all Function Blocks at the end of the program
    This is a good practice.
*)
mcReadStatus(Axis := GVL_AxisDefines.X_Axis,
             Enable := stPlcOpenThisFb.bEnableReadStatus);             // Does not depends on state machine

mcReadActualPosition(Axis := GVL_AxisDefines.X_Axis,
                     Enable := stPlcOpenThisFb.bEnableReadPosition);   // Does not depends on state machine
                                         
mcReadActualVelocity(Axis := GVL_AxisDefines.X_Axis,
                     Enable := stPlcOpenThisFb.bEnableReadVelocity);   // Does not depends on state machine
                     
(*
    Activation of Function Blocks depending only of states
    EXCEPTION: ativation only if NOT the remove flat (to allow manual action on FBs)
*)
IF NOT stPlcOpenThisFb.bEnableRemote THEN
    // Enable in any case, else (idle or PowerOff)
    mcPower.Enable := NOT (stStateMachineInfo.eState = EN_MoveAbsStates.eIdle       OR
                           stStateMachineInfo.eState = EN_MoveAbsStates.eIsPowerOff);
    // Only active while executing motion
    mcMoveAbsolute.Execute := (stStateMachineInfo.eState = EN_MoveAbsStates.eInitMotion);
    // Only active while executing stop
    mcStop.Execute := (stStateMachineInfo.eState = EN_MoveAbsStates.eStopping);
    // Only active while error
    mcReset.Execute := (stStateMachineInfo.eState = EN_MoveAbsStates.eReset);
END_IF

mcPower(Axis := GVL_AxisDefines.X_Axis);

mcMoveAbsolute(Axis := GVL_AxisDefines.X_Axis,
               Position := stSetDynamicParams.rPosition_mm,
			   // Warning, here, conver mm/min used by default by SFK to mm/s
               Velocity := stSetDynamicParams.rVeloctiy_mm_s * 60,
               Acceleration := stSetDynamicParams.rAcceleration_mm_s2,
               Deceleration := stSetDynamicParams.rDeceleration_mm_s2,
               Jerk := stSetDynamicParams.rJerk_mm_s3);               

// A noter que un stop sans décélération conduit à une erreur !
mcStop(Axis := GVL_AxisDefines.X_Axis);

mcReset(Axis := GVL_AxisDefines.X_Axis);

(*
    List of errors you want to indicate
*)
bError := (stStateMachineInfo.eState = EN_MoveAbsStates.eErrorStop);
bInitDone := (stStateMachineInfo.eState = EN_MoveAbsStates.eInitMotionDone);</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c8ce17c1-b1e1-4ecd-aa7d-71a9c78b80c4</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="PLC_PRG" pouType="program">
                <interface>
                  <localVars>
                    <variable name="stPlcOpenFbs">
                      <type>
                        <derived name="ST_PlcOpenFbs" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
        First part of variables are similar to Practical Work for Move Absolute
        Practical Work for Move Absolute is encapsulated in FB_InitMotionToSetPoint
    
 Access for manual oprations on PLCopen FB of THIS FB</xhtml>
                      </documentation>
                    </variable>
                    <variable name="stSetMotionParam">
                      <type>
                        <derived name="ST_SetMotionParam" />
                      </type>
                      <initialValue>
                        <structValue>
                          <value member="rVeloctiy_mm_s">
                            <simpleValue value="50" />
                          </value>
                          <value member="rAcceleration_mm_s2">
                            <simpleValue value="0.1" />
                          </value>
                          <value member="rDeceleration_mm_s2">
                            <simpleValue value="0.1" />
                          </value>
                          <value member="rJerk_mm_s3">
                            <simpleValue value="1" />
                          </value>
                        </structValue>
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Contains dynamic parameters for MC_MoveAbsolute</xhtml>
                      </documentation>
                    </variable>
                    <variable name="fbInitMotionToSetPoint">
                      <type>
                        <derived name="FB_InitMotionToSetPoint" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used to init the axis to a preset initPosition</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                  <documentation>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">
	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Projet No: PW Move Absolute
	Author:		Cedric Lenoir
	Date:		2023 October 18
	
	Summary:	Template to go to init position before to use
                Cyclic Set Point
</xhtml>
                  </documentation>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// Should be ideally a reset button from the Cell
fbInitMotionToSetPoint.bInit := GVL_CyclSetPoint.stRemote.in.bInit;
// Is 0 by default if not set
fbInitMotionToSetPoint.bInitPosition := GVL_CyclSetPoint.stRemote.in.bInitPosition;
// Should be ideally implemented from E-Stop safety loop before STO.
fbInitMotionToSetPoint.bStop := GVL_CyclSetPoint.stRemote.in.bStop;

(*
    Logic and sequence to be programmed here.
    Init Motion to set point then write a sequence to move forward and back
    with the motion profile
*)

fbInitMotionToSetPoint(stPlcOpenThisFb := stPlcOpenFbs,
                       stSetDynamicParams := stSetMotionParam,
                       bInitDone =&gt; GVL_CyclSetPoint.stRemote.out.bInitDone,
                       bError =&gt; GVL_CyclSetPoint.stRemote.out.bError);
                       
               </xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>29bdd9ae-e739-4b3b-8b60-81b73ce5c0a6</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="PRG_CyclicSetPoint" pouType="program">
                <interface>
                  <localVars>
                    <variable name="fbGenerateProfile">
                      <type>
                        <derived name="FB_GenerateProfile" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
        Second part of variables are used to generate a motion profile using 5th order polynomial.

        Details of polynomials can be experimented using a mlx Matlab file.  
    </xhtml>
                      </documentation>
                    </variable>
                    <variable name="mcCyclicSetPoint">
                      <type>
                        <derived name="MB_CyclicSetPoint" />
                      </type>
                    </variable>
                  </localVars>
                  <documentation>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">
	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Projet No: PW Motion Cyclic
	Author:		Cedric Lenoir
	Date:		2023 October 19
	
	Summary:	It MUST work at the same cycle time as the Motion Kernel, i.e. 2 [ms]
                Will be synchronized with the cycle time of the Ethercat real-time bus.

                It means too, that the Profile generator MUST generate a new point each 2 [ms] 
</xhtml>
                  </documentation>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// Here, we must see these two functions as two function blocks which do not have their own static internal variables.
// Static variables are provided by the structures passed by Data VAR_IN_OUT.

// Very Important: the axis name is defined in the CTRLx Core / Motion
// If the axis name is false, as this is a pointer, it can cause a Crash.
// mlAxsCyclicSetPointData.In.AxisName := 'Axis_1';
// mlSetCyclicSetPointData.In.AxisName := 'Axis_1';
// mlAxsCyclicSetPointData.In.Source := 'MotionCyclic';
// mlSetCyclicSetPointData.In.Source := 'MotionCyclic';
// 
// IF GVL_CyclSetPoint.stRemote.in.bInit THEN
//     SETmlAxsCyclicSetPoint := FALSE;
//     SETmsSetCyclicSetPoint := FALSE;
//     lrTestPoint := 0;
//     diCountGoodPoints := 0;
// END_IF
// 
// IF SETmlAxsCyclicSetPoint THEN
//     ML_AxsCyclicSetPoint(Data:= mlAxsCyclicSetPointData,
//                          ML_AxsCyclicSetPoint =&gt; GETmlAxsCyclicSetPoint);                            
// END_IF
// 
// IF SETmsSetCyclicSetPoint THEN
// //    mlSetCyclicSetPointData.In.Value := fbGenerateProfile.lrSetPosition;
//     IF lrTestPoint &gt;= 5 THEN
//         switch := TRUE;
//         lrTestPoint := 5;
//     END_IF
//     IF lrTestPoint &lt;= -5 THEN
//         switch := FALSE;
//         lrTestPoint := -5;
//     END_IF
//     
//     IF NOT switch THEN
//         lrTestPoint := lrTestPoint + 0.003;
//     ELSE
//         lrTestPoint := lrTestPoint - 0.003;
//     END_IF
// //    mlSetCyclicSetPointData.In.Value := lrTestPoint;
//     mlSetCyclicSetPointData.In.Value := GVL_CyclSetPoint.stRemote.in.lrProfileSetPosition;
//     diCountGoodPoints := diCountGoodPoints + 1;
//     ML_SetCyclicSetPoint(Data := mlSetCyclicSetPointData,
//                          ML_SetCyclicSetPoint =&gt; GETmsSetCyclicSetPoint);
// END_IF

(*
	Try with 
*)
mcCyclicSetPoint.Execute := GVL_CyclSetPoint.stRemote.in.bActivateCoupling;
mcCyclicSetPoint.SetPoint := GVL_CyclSetPoint.stRemote.in.lrProfileSetPosition;
mcCyclicSetPoint(Axis := GVL_AxisDefines.X_Axis);

(*
    Call FB at the end of the Program
*)
fbGenerateProfile(bStartForward := GVL_CyclSetPoint.stRemote.in.bStartForward,
                  bStartBackward := GVL_CyclSetPoint.stRemote.in.bStartBackward,
                  startPosition_mm := GVL_CyclSetPoint.stRemote.in.bInitPosition,
                  endPosition_mm := GVL_CyclSetPoint.stRemote.in.bEndPosition,
                  udiCyclTime_ms := GVL_CyclSetPoint.MOTION_CYCLE_TIME_ms,
                  udiCycleTimeMult := GVL_CyclSetPoint.stRemote.in.udiCycleTimeMultiplier, // Could be a parameter latter when all is working
                  arGoToPos := GVL_CyclSetPoint.arGoToPosition,
                  arReturnFromPos := GVL_CyclSetPoint.arReturnFromPosition,
                  lrSetPosition =&gt; GVL_CyclSetPoint.stRemote.in.lrProfileSetPosition,
                  bDoneForward =&gt; GVL_CyclSetPoint.stRemote.out.bFwdDone,
                  bDoneBackward =&gt; GVL_CyclSetPoint.stRemote.out.bBackDone);</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>1337f422-a28e-48dc-93a7-cdaaa4615d23</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
              <Libraries>
                <Library Name="#CmpLog" Namespace="CmpLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="" />
                <Library Name="#IecVarAccess" Namespace="IecVarAccessLibrary" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="IecVarAccess, 3.3.1.20 (System)" />
                <Library Name="CmpIecTask, 3.5.17.40 (System)" Namespace="CmpIecTask" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
                <Library Name="#BreakpointLogging" Namespace="BPLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Breakpoint Logging Functions, 3.5.5.0 (3S - Smart Software Solutions GmbH)" />
                <Library Name="#IoStandard" Namespace="IoStandard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="true" DefaultResolution="IoStandard, 3.5.17.0 (System)" />
                <Library Name="#CXA_BASE" Namespace="CXAC_Base" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CXAC_Base, 1.16.0.0 (Bosch Rexroth AG)" />
                <Library Name="#CXA_COMMONTYPES" Namespace="CXA_CommonTypes" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CXA_CommonTypes, 1.14.0.0 (Bosch Rexroth AG)" />
                <Library Name="#CXA_UTILITIES" Namespace="CXA_Utilities" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CXA_Utilities, 1.14.0.3 (Bosch Rexroth AG)" />
                <Library Name="#Standard" Namespace="Standard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Standard, 3.5.17.0 (System)" />
                <Library Name="#3SLicense" Namespace="_3S_LICENSE" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="3SLicense, 0.0.0.0 (3S - Smart Software Solutions GmbH)" ResolverGuid="97c3b452-d9fa-4ac2-9d0c-3d420aa6d95b" />
                <Library Name="#CXA_PLCOPEN" Namespace="CXA_PLCopen" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CXA_PLCopen, * (Bosch Rexroth AG)" />
                <Library Name="#CXA_MOTION_INTERFACE" Namespace="CXA_MotionInterface" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CXA_MotionInterface, * (Bosch Rexroth AG)" />
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>25c4f9d0-b5ed-4d91-b717-7770d2fda049</ObjectId>
                  </data>
                </addData>
              </Libraries>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>51c5b47c-888b-4542-a4a6-3caad47a8241</ObjectId>
            </data>
          </addData>
        </resource>
        <addData>
          <data name="Device" handleUnknown="discard">
            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
              <DeviceType>
                <DeviceIdentification>
                  <Type>4096</Type>
                  <Id>1001 0080</Id>
                  <Version>1.16.0.0</Version>
                </DeviceIdentification>
                <Connector moduleType="42400" interface="BRC:DataLayer" connectorId="0">
                  <HostParameterSet />
                </Connector>
                <Connector moduleType="256" interface="Common.PCI" connectorId="1">
                  <HostParameterSet />
                </Connector>
                <DeviceParameterSet>
                  <Parameter ParameterId="2147483920" type="std:BOOL" IndexInDevDesc="0">
                    <Attributes offlineaccess="none" onlineaccess="none" />
                    <Value name="_x0032_147483920" visiblename="Use scheduler priority" offlineaccess="none" onlineaccess="none" desc="Use scheduler priority as IEC task priority.">True</Value>
                    <Name>Use scheduler priority</Name>
                    <Description>Use scheduler priority as IEC task priority.</Description>
                  </Parameter>
                </DeviceParameterSet>
              </DeviceType>
            </Device>
          </data>
          <data name="configurations" handleUnknown="discard">
            <configurations>
              <configuration name="Realtime_Data">
                <addData>
                  <data name="Device" handleUnknown="discard">
                    <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" fixedIndex="0" xmlns="">
                      <DeviceType>
                        <DeviceIdentification>
                          <Type>42420</Type>
                          <Id>1001 0000</Id>
                          <Version>1.8.0.0</Version>
                        </DeviceIdentification>
                        <Connector moduleType="42420" role="child" interface="BRC:DataLayer" connectorId="0">
                          <HostParameterSet />
                        </Connector>
                        <Connector moduleType="42421" interface="BRC:DataLayerPath" connectorId="1">
                          <HostParameterSet />
                        </Connector>
                        <DeviceParameterSet />
                      </DeviceType>
                    </Device>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9b23d138-fe71-4e6b-a0e9-7d9d4fbc7618</ObjectId>
                  </data>
                </addData>
              </configuration>
            </configurations>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1d54792c-3e19-43e1-baaf-7044e39c34b1</ObjectId>
          </data>
        </addData>
      </configuration>
    </configurations>
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Object Name="PracticalWork_01" ObjectId="1d54792c-3e19-43e1-baaf-7044e39c34b1">
          <Object Name="BaseInterfaceUa" ObjectId="51c5b47c-888b-4542-a4a6-3caad47a8241">
            <Object Name="Library Manager" ObjectId="25c4f9d0-b5ed-4d91-b717-7770d2fda049" />
            <Object Name="MainTask" ObjectId="78c08a0f-8c0a-4cae-993a-8ea4cc6c8e72" />
            <Object Name="MotionTask_2ms" ObjectId="5656c2c6-04ae-40c8-bc8a-5f11a25b8a04" />
            <Folder Name="UA_Box">
              <Object Name="GVL_Abox" ObjectId="31b95c15-5cf4-485c-8394-f9c0ad5586f3" />
              <Object Name="PRG_MapBox" ObjectId="81a742c1-f168-4201-931a-c5044bbbda80" />
              <Object Name="PRG_CHECK_IO" ObjectId="d5610066-b322-4d3c-a26d-47ad8b18dbd0" />
            </Folder>
            <Folder Name="DUT_ABox">
              <Object Name="UA_DigitalInput_32" ObjectId="a8f884db-ac4f-40d0-bcab-8badc6587dcc" />
              <Object Name="UA_DigitalOutput_32" ObjectId="7b52e73f-21ed-4643-ae78-7cbc7194e35a" />
              <Object Name="UA_ButtonAndSignal" ObjectId="b3f9a3b5-82f9-447e-a261-cb2d18ffb6eb" />
              <Object Name="UA_O300_DL" ObjectId="6026491a-5615-4c42-b2f8-5562044ffab5" />
              <Object Name="UA_O300_ZL" ObjectId="0292b894-9834-4595-b44c-87810191b2ca" />
              <Object Name="UA_U300_D50" ObjectId="9f70432a-c970-455e-a9e2-baa1b526f168" />
              <Object Name="UA_U300_P50" ObjectId="7f0e2eb1-ba19-4d1b-be94-9623d8b4ba56" />
              <Object Name="UA_Schunk_mms" ObjectId="e1630ce8-bc96-43e5-9e0c-58c82b66b1bc" />
              <Object Name="UA_Balluf_bcm0002" ObjectId="6fac8e51-2212-48d9-b853-8070ad243c78" />
              <Object Name="UA_Festo" ObjectId="634e16b1-da38-4e2b-b9e1-42ee4bdb38cc" />
              <Object Name="UA_AnalogIn" ObjectId="9609e6b4-7275-4343-861c-fef510482801" />
              <Object Name="UA_AnalogOut" ObjectId="c2ad5a14-bba9-482f-9eb2-2a91ac4fe72c" />
              <Object Name="UA_AboxInterface" ObjectId="03a0b2ac-89d3-4829-82ce-c9ce9256e8f7" />
            </Folder>
            <Folder Name="DUTs">
              <Object Name="GVL_AxisDefines" ObjectId="fbed7d43-1b1d-44ab-b273-bda7af868979" />
              <Object Name="ST_PlcOpenFbs" ObjectId="91228204-eb16-473b-8fe0-800c02ac25d9" />
              <Object Name="ST_SetMotionParam" ObjectId="4ebefe34-98e8-4b46-a015-351f1e587d13" />
              <Object Name="ST_StateMachineInfo" ObjectId="b0bc352a-3795-4e69-ba2c-5318db5e9d2b" />
              <Object Name="ST_RemoteCyclicSetPosition" ObjectId="8a3cf65a-db13-4abf-b4e5-ed6c70bc741b" />
              <Object Name="ST_RemoteCyclicSetPositionIn" ObjectId="7950c277-c170-4290-bc58-d2a229681bd5" />
              <Object Name="ST_RemoteCyclicSetPositionOut" ObjectId="075fe29f-e565-4245-8621-a8fc32c2cd08" />
            </Folder>
            <Folder Name="GVLs">
              <Object Name="GVL_CyclSetPoint" ObjectId="c785d28d-6e9b-46ff-9791-4bb0daeb847a" />
            </Folder>
            <Folder Name="POUs">
              <Object Name="FB_GenerateProfile" ObjectId="50792f82-5944-4fa1-a456-dca8caa57200" />
              <Object Name="FB_InitMotionToSetPoint" ObjectId="c8ce17c1-b1e1-4ecd-aa7d-71a9c78b80c4" />
              <Object Name="PLC_PRG" ObjectId="29bdd9ae-e739-4b3b-8b60-81b73ce5c0a6" />
              <Object Name="PRG_CyclicSetPoint" ObjectId="1337f422-a28e-48dc-93a7-cdaaa4615d23" />
            </Folder>
          </Object>
          <Object Name="Realtime_Data" ObjectId="9b23d138-fe71-4e6b-a0e9-7d9d4fbc7618" />
        </Object>
      </ProjectStructure>
    </data>
  </addData>
</project>